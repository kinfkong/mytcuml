{\rtf1\ansi\ansicpg936\uc2\deff0\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}\'cb\'ce\'cc\'e5{\*\falt SimSun};}
{\f36\fnil\fcharset134\fprq2{\*\panose 00000000000000000000}@\'cb\'ce\'cc\'e5;}{\f38\froman\fcharset238\fprq2 Times New Roman CE;}{\f39\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f41\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f42\froman\fcharset162\fprq2 Times New Roman Tur;}{\f43\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f44\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f45\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f46\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f48\fswiss\fcharset238\fprq2 Arial CE;}{\f49\fswiss\fcharset204\fprq2 Arial Cyr;}{\f51\fswiss\fcharset161\fprq2 Arial Greek;}{\f52\fswiss\fcharset162\fprq2 Arial Tur;}
{\f53\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f54\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f55\fswiss\fcharset186\fprq2 Arial Baltic;}{\f56\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f58\fmodern\fcharset238\fprq1 Courier New CE;}
{\f59\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f61\fmodern\fcharset161\fprq1 Courier New Greek;}{\f62\fmodern\fcharset162\fprq1 Courier New Tur;}{\f63\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f64\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f65\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f66\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f170\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}
{\f400\fnil\fcharset0\fprq2 @\'cb\'ce\'cc\'e5 Western;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red255\green255\blue255;}{\stylesheet{
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \snext0 Normal;}{\s1\ql \li0\ri0\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 heading 2;}{\s3\ql \li0\ri0\nowidctlpar\faauto\outlinelevel2\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af13\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}
{\*\rsidtbl \rsid12343757\rsid12864843}{\*\generator Microsoft Word 11.0.5604;}{\info{\author Gencheng Wu}{\operator Gencheng Wu}{\creatim\yr2006\mo11\dy18\hr10\min29}{\revtim\yr2006\mo11\dy21\hr15\min33}{\version3}{\edmins934}{\nofpages15}{\nofwords4940}
{\nofchars28163}{\*\company Microsoft}{\nofcharsws33037}{\vern24689}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 \ftnbj\aenddoc\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3
\jcompress\viewkind4\viewscale100\rsidroot12343757 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl3
\pndec\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta \dbch )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang 
{\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb \dbch (}{\pntxta \dbch )}}\pard\plain \s1\ql \li0\ri0\sb120\sa120\nowidctlpar\tx720\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs32\ul\insrsid12343757 
\hich\af0\dbch\af13\loch\f0 Action Manager 1.0 Component Specification
\par }\pard\plain \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid12343757 
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa120\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1.\tab Design
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
The Action Manager component provides a general framework for executing actions. It also provides the undo/redo actions framework. The component provides the one place to be accessed when executing actions inside an application. All the GUI significant ch
\hich\af1\dbch\af13\loch\f1 a\hich\af1\dbch\af13\loch\f1 
nges that affect the model of the application must be executed through this component. It will keep track of the undo / redo actions, also resetting the undo / redo manager if a non undoable action is executed, or leaving the undo / redo manager\hich\f1 
\rquote \loch\f1 s state a\hich\af1\dbch\af13\loch\f1 s\hich\af1\dbch\af13\loch\f1  is if a transient action is executed. 
\par \hich\af1\dbch\af13\loch\f1 The heart of the component is the ActionManager class and is responsible for executing simple actions, transient actions, undoable actions and undo / redoes actions. The manager will maintain the undo / redo state (t
\hich\af1\dbch\af13\loch\f1 
he undoable actions) in a javax.swing.undo.UndoManager instance. Since for getting the UndoableActions to be un-done/re-done are not directly exposed by the UndoManager, the design uses an extension of the javax.swing.undo.UndoManager class called Advance
\hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1 UndoManager defined in this component which provides methods for achieving this functionality by using the protected methods/members from the javax.swing.undo.UndoManager class. 
\par \hich\af1\dbch\af13\loch\f1 This class also defines the Action interface which will be implemented by the\hich\af1\dbch\af13\loch\f1 
 specific components of the TC UML Tool which provides the handling for the specific actions which includes both GUI as well as non-GUI actions. All the actions will be executed using the ActionManager class which provides additional service of maintainin
\hich\af1\dbch\af13\loch\f1 g\hich\af1\dbch\af13\loch\f1  the actions can be re-done/un-done and allowing undo/redo of Action(s).
\par \hich\af1\dbch\af13\loch\f1 Additionally the component defines two marker interfaces namely TransientAction and UndoableAction. TransientAction marker interface defines that the execution of the action should no\hich\af1\dbch\af13\loch\f1 
t affect the state of the actions that are stored to be un-done/re-done. Undoable marker interface defines that the particular action can be un-done after execution re-done if after execution it was undone.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Finally the component also provides a couple of a\hich\af1\dbch\af13\loch\f1 dapter classes namely }{\f1\fs20\insrsid12343757 
\hich\af1\dbch\af13\loch\f1 TransientUndoableAction and CompondUndoableAction which adapts TransientAction and javax.swing.undo.CompondEdit respectively as an UndoableAction.}{\f1\fs20\cf1\insrsid12343757 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 In addition to the core set of functionalities required by the component, the componen\hich\af1\dbch\af13\loch\f1 
t also provides additional functionality of Logging which is pretty much useful and pertinent to such a component which is central component for handling the execution of the actions and handling the undo/redo operations. Logging and tracing the sequence 
\hich\af1\dbch\af13\loch\f1 o\hich\af1\dbch\af13\loch\f1 f events that go on is pretty much useful and helps in detecting and correction of problem easily.}{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 
\par }{\b\f1\fs20\ul\cf6\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Note:}{\b\f1\fs20\cf6\insrsid12343757 \hich\af1\dbch\af13\loch\f1  }{\f1\fs20\cf6\insrsid12343757 \hich\af1\dbch\af13\loch\f1 \hich\f1 
It is highly recommended to go through the configuration file \'93\loch\f1 \hich\f1 Action_Manager.xml\'94\loch\f1  before proceeding with the remainder of the document. This file is \hich\af1\dbch\af13\loch\f1 
richly documented and defines what each property is meant for and its usage in the design.  [Though only 3 configuration properties are defined in it]}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Please configure the required components like Configuration Manager 2.1.5, BaseException 1.0 and Logging \hich\af1\dbch\af13\loch\f1 Wrapper 1.2.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1.1\tab 
Design Patterns 
\par }\pard\plain \ql \li701\ri0\sa120\nowidctlpar\faauto\rin0\lin701\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
Adapter pattern is used by TransientUndoableAction and CompondUndoableAction to adapt TransientAction and javax.swing.undo.CompondEdit respectively as an UndoableAction.
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1.2\tab 
Industry Standards 
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Java Swing Undo Framework
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1
\hich\af1\dbch\af13\loch\f1 .3\tab Required Algorithms
\par }\pard \s2\ql \li720\ri0\sb120\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin720\itap0 {\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
None. All the algorithms required for the various methods are pretty trivial involving just 2 to 3 steps and hence have been provided as implementation hints in the methods documentation wherever required. This section mentions about
\hich\af1\dbch\af13\loch\f1  how the logging should be performed by ActionManager using the Logging Wrapper 1.2}{\f1\fs20\cf6\insrsid12343757 \hich\af1\dbch\af13\loch\f1  }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 component.
\par }{\b\f1\fs20\ul\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1.3.1  Logging:
\par }\pard\plain \qj \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f2\fs18\cf9\insrsid12343757 
\par \hich\af2\dbch\af13\loch\f2 
The class ActionManager can be initialized by providing the Log instance from the Logging Wrapper component to be used for performing the Logging though this is optional as Logging involves some overhead. The Log instance to be used and the level of loggi
\hich\af2\dbch\af13\loch\f2 n\hich\af2\dbch\af13\loch\f2 
g to be performed can be passed as parameter to the constructor during the creation of the instance of ActionManager or can be specified in the configuration file and the namespace from which the configuration properties needs to be read can be passed as 
\hich\af2\dbch\af13\loch\f2 p\hich\af2\dbch\af13\loch\f2 
arameter to the constructor during the initialization of ActionManager. The different levels of logging supported by the component and what needs to be logged at each level have been described as follows:
\par }\pard \qj \li1080\ri0\nowidctlpar\faauto\rin0\lin1080\itap0 {\f2\fs18\cf9\insrsid12343757 
\par }\pard \qj \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f2\fs18\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 Five log levels are defined.
\par 
\par }{\f2\fs18\ul\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 OFF:
\par 
\par }{\f2\fs18\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 No logging nee\hich\af2\dbch\af13\loch\f2 ds to be done.
\par 
\par }{\f2\fs18\ul\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 ERROR:
\par }{\f2\fs18\cf9\insrsid12343757 
\par \hich\af2\dbch\af13\loch\f2 1. Any exception that occurs during processing.
\par \hich\af2\dbch\af13\loch\f2 The log message should be "Exception caught: exception.getMessage()". The exception stacktrace should also be logged.
\par 
\par 
\par }{\f2\fs18\ul\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 WARN:}{\f2\fs18\cf9\insrsid12343757 
\par 
\par \hich\af2\dbch\af13\loch\f2 In addition to the logging mentioned to be done for the E\hich\af2\dbch\af13\loch\f2 
RROR level, logging should be done mentioning whether the processing will proceed after the  exception is raised or will the processing be terminated after the exception is raised.
\par 
\par }{\f2\fs18\ul\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 INFO:
\par }{\f2\fs18\cf9\insrsid12343757 
\par \hich\af2\dbch\af13\loch\f2 In addition to the logging mentioned to be done for the WARN level,\hich\af2\dbch\af13\loch\f2  the following additional logging needs to be done:
\par 
\par \hich\af2\dbch\af13\loch\f2 1. Incoming Parameters
\par \hich\af2\dbch\af13\loch\f2 If the method takes parameters, all the parameters should be logged. If any argument is a List, iterate through the parameters list, and log each parameter in the list. The log mes\hich\af2\dbch\af13\loch\f2 
sage should be "Incoming parameter: parameter.toString()"
\par \hich\af2\dbch\af13\loch\f2 2. Some major steps in the processing being started or completed.
\par 
\par }{\f2\fs18\ul\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 DEBUG:
\par }{\f2\fs18\cf9\insrsid12343757 
\par \hich\af2\dbch\af13\loch\f2 In addition to the logging mentioned to be done for the INFO level, the following additional logging needs to be done:
\par 
\par \hich\af2\dbch\af13\loch\f2 1. The entrance and exit of each method call. 
\par \hich\af2\dbch\af13\loch\f2 For entrance, the log message should be "entrance of method: method signature"
\par \hich\af2\dbch\af13\loch\f2 For exit, the log message should be "exit of method: method signature".
\par 
\par \hich\af2\dbch\af13\loch\f2 2. Detailed return message
\par \hich\af2\dbch\af13\loch\f2 If the method has return type,\hich\af2\dbch\af13\loch\f2 
 assume that the returned object is result, the log message should be "Return message: result.toString()".If the method return void, the log message should be "Return message: void".  If the return type is an array, then the message should be "Return mess
\hich\af2\dbch\af13\loch\f2 a\hich\af2\dbch\af13\loch\f2 ge: Array: <class> Size: <size>".
\par }\pard\plain \s2\ql \li720\ri0\sb120\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 
\par }\pard \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1.4\tab Component Class Overview
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 ActionManager [class]}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This class is the main class of the component and is responsible for responsible for executing all types of Action's like simple actions, transient actions, undoable act\hich\af1\dbch\af13\loch\f1 
ions and undo / redo actions. The manager will maintain the undo / redo state (the undoable actions) in an AdvancedUndoManager extension of javax.swing.undo.UndoManager. It provides methods to:
\par \hich\af1\dbch\af13\loch\f1 1. Execute Action.
\par \hich\af1\dbch\af13\loch\f1 2. To redo / undo Actions that exists in th\hich\af1\dbch\af13\loch\f1 e undo / redo manager [AdvancedUndoManager].
\par \hich\af1\dbch\af13\loch\f1 3. To query about the Actions to be undone / redone.
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: This class has immutable instance members but is not thread-safe as it provides methods for executing the Action and also methods for undo and \hich\af1\dbch\af13\loch\f1 
redo of UndoableAction and the implementations of the Actions and the UndoableAction interface might or might not be thread-safe and since this class invokes methods of these interfaces, cannot be attributed to be thread-safe.
\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 Action [interface]}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This is t\hich\af1\dbch\af13\loch\f1 
he main interface defined by the component and defines the behavior of an action that can be executed to perform an operation. [The Action may be GUI based or non GUI based (for example: an action to perform printing)]. This interface defines a single met
\hich\af1\dbch\af13\loch\f1 h\hich\af1\dbch\af13\loch\f1 
od called "execute" which is supposed to perform the Action when this method is invoked. The Action is required as much as possible to be transactional in nature [though might not be always possible] and when the Action fails to execute should try to retu
\hich\af1\dbch\af13\loch\f1 r\hich\af1\dbch\af13\loch\f1 n to the state before the Action was executed. The execute() method of the Action is required to throw an ActionExecutionException if it fails to execute the Action.
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Examples of Action: load a new project, close the existing project. }{\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: The im\hich\af1\dbch\af13\loch\f1 
plementations of this interface may or may not be thread-safe. This is because the Action implementation may make use of external resources and access to these cannot be made thread-safe as these external resources might be used by other process as well.

\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 TransientAction [interface]}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
This interface extends the Action interface and is a marker interface and defines no methods as a part of the interface definition. This interface marks the class of Action(s) that should not affect the state of the undo/redo manager. This marker interfac
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1  indicates to the ActionManager that on executing such an Action, no change should be done to the state of the AdvancedUndoManager.
\par \hich\af1\dbch\af13\loch\f1 Examples of TransientAction: print a diagram, copy an element to the clipboard, save the project.
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: This interf\hich\af1\dbch\af13\loch\f1 ace follows the Action interface with regards to the thread-safety requirements and the implementations of this interface may or may not be thread-safe.
\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 UndoableAction [interface]}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This interface extends the Action interface and the javax.swing.undo.Undoab\hich\af1\dbch\af13\loch\f1 
leEdit interface and is a marker interface and defines no methods as a part of the interface definition. This interface marks the class of Action(s) that can be un-done and re-done. When such an Action is executed using the ActionManager, the ActionManage
\hich\af1\dbch\af13\loch\f1 r\hich\af1\dbch\af13\loch\f1  will be add these Actions to the AdvancedUndoManager it maintains and will use it for un-doing/re-doing such Actions.
\par \hich\af1\dbch\af13\loch\f1 The undo() and the redo() methods from the javax.swing.undo.UndoableEdit interface which this interface extends from are not supposed to \hich\af1\dbch\af13\loch\f1 
throw any exceptions as opposed to the runtime exceptions thrown by the undo() and redo() methods of the javax.swing.undo.UndoableEdit interface. The undo() and redo() methods will not throw any exception, according to their signatures, but the concrete c
\hich\af1\dbch\af13\loch\f1 l\hich\af1\dbch\af13\loch\f1 asses should provide error handling either through logging, or by storing the last exception or both.
\par \hich\af1\dbch\af13\loch\f1 Examples of UndoableActions: add a class to the diagram, move an element on the diagram, remove an element.
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: This interface follows the Acti\hich\af1\dbch\af13\loch\f1 on interface with regards to the thread-safety requirements and the implementations of this interface may or may not be thread-safe.
\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 TransientUndoableAction [class]}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This class adapts a TransientAction, to be used as a non-significant UndoableAction. Its p\hich\af1\dbch\af13\loch\f1 
urpose is to allow the TransientAction to be used inside a CompoundUndoableAction. The adapter\hich\f1 \rquote \loch\f1 
s canUndo() method will return true, and the undo() method will do nothing (it will not throw exceptions). This class follows the Adapter pattern.
\par \hich\af1\dbch\af13\loch\f1 Example of usa\hich\af1\dbch\af13\loch\f1 
ge: the cut undoable action is composed by a transient copy action and an undoable remove action. In order to be able to create a single undoable action for the cut action, and avoid creating a new class, the action will be a compound undoable action, con
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 aining the non-significant undoable copy action and the undoable remove action.
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: This class has mutable instance members and no synchronized access is made to these and hence the class is not thread-safe. Also it provides methods for executin\hich\af1\dbch\af13\loch\f1 
g the TransientAction it is adapting and the TransientAction might not be thread-safe.
\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 CompoundUndoableAction [class]}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This class adapts a javax.swing.undo.CompoundEdit to be used as an UndoableAction. Its purpose is to allow the javax.swing.undo.CompoundE\hich\af1\dbch\af13\loch\f1 
dit to be used as an UndoableAction. The adapter\hich\f1 \rquote \loch\f1 s method merely delegates calls to the instance of javax.swing.undo.CompoundEdit it is adapting. This class follows the Adapter pattern.
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: This class has mutable instance members and no synchron\hich\af1\dbch\af13\loch\f1 
ized access is made to these and hence the class is not thread-safe. Also it delegates the methods to the corresponding methods on the CompoundEdit instance it is enclosing and since the class CompoundEdit is not thread-safe, this class is also not thread
\hich\af1\dbch\af13\loch\f1 -\hich\af1\dbch\af13\loch\f1 safe.
\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 AdvancedUndoManager [private inner class]
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
This class extends the javax.swing.undo.UndoManager class and provides additional methods which are required for servicing the functional requirements required by the ActionManager like fetching the List of \hich\af1\dbch\af13\loch\f1 
UndoableAction(s) that can be un-done/re-done, the last UndoableAction that can be un-done/re-done and the methods that allow un-doing/re-doing all the UndoableAction(s) it maintains till/including the passed UndoableAction. These methods are as such not 
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1 xposed/provided by the javax.swing.undo.UndoManager class and this class provides these functionalities by making use of the protected members and the protected methods from the parent class.
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: This class has no members of its own but accesses\hich\af1\dbch\af13\loch\f1 
 the members from the super class and allows the undo/redo operations of the UndoableAction and these operations are not as such required to be thread-safe and hence this class is not thread-safe.}{\b\f1\fs20\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 
\par }{\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 AdvancedCompoundEdit [private inner class]}{\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 This class exte\hich\af1\dbch\af13\loch\f1 
nds the javax.swing.undo.CompoundEdit class and provides an additional method which is required for servicing the functional requirements required by the CompoundUndoableAction like getting the array of UndoableAction/UndoableEdit that is stored inside a 
\hich\af1\dbch\af13\loch\f1 C\hich\af1\dbch\af13\loch\f1 
ompoundEdit and which is not exposed by the CompoundEdit class as such. This method  is not as such exposed/provided by the javax.swing.undo.UndoCompound class and this class provides this functionality by making use of the protected members from the pare
\hich\af1\dbch\af13\loch\f1 n\hich\af1\dbch\af13\loch\f1 t class.
\par \hich\af1\dbch\af13\loch\f1 Thread-Safety: This class has no members of its own but accesses the members from the super class which is not thread-safe and hence this class is not thread-safe.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1.5\tab 
Component Exception Definitions
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 IllegalArgumentException [From java.lang]

\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
This exception is thrown in various methods if the given argument is null. It is also thrown in cases when the passed String parameters to a method are empty Strings. Refer to the documentation in Poseidon for more details.
\par }{\b\f1\fs20\cf6\insrsid12343757 \hich\af1\dbch\af13\loch\f1 NOTE: Empty string means string \hich\af1\dbch\af13\loch\f1 of zero length or string full of white spaces.
\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 ActionExecutionException [custom]
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This exception is thrown by the execute() method of the Action interface and re-thrown by the executeAction() method of the ActionManager class. This exception primarily indi
\hich\af1\dbch\af13\loch\f1 
cates that there was a problem in the execution of the Action and that the execution of the Action could not be completed. The exception is also thrown by the Action, if the Action determines that it cannot be executed at that point in time [may be not ha
\hich\af1\dbch\af13\loch\f1 v\hich\af1\dbch\af13\loch\f1 ing access to the required resources] or its execution could lead to problems.
\par 
\par }{\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 UndoActionExecutionException [custom]
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This exception extends the ActionExecutionException and is thrown by the undoActions() method of AdvancedUndoManager to indicate that the \hich\af1\dbch\af13\loch\f1 
undo of the UndoableAction's till the passed UndoableAction could not be successfully completed. This could happen when the UndoableAction till which the UndoableAction's have to be un-done is not found to be present with the AdvancedUndoManager.
\par \hich\af1\dbch\af13\loch\f1 Note that\hich\af1\dbch\af13\loch\f1 
 the undo() method of the UndoableAction is not supposed to throw any exception [even runtime exception] and hence this will "not" act as a wrapper exception as the undo() method of UndoableAction does not throw any exception. Also it is worthwhile to not
\hich\af1\dbch\af13\loch\f1 e\hich\af1\dbch\af13\loch\f1  the undoActions() methods of ActionManager will "not" throw this exception as the undoActions() method of ActionManager do not throw any checked exceptions.
\par }{\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 RedoActionExecutionException [custom]
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 This exception extends the ActionExecutionException and is \hich\af1\dbch\af13\loch\f1 
thrown by the redoActions() method of AdvancedUndoManager to indicate that the redo of the UndoableAction's till the passed UndoableAction could not be successfully completed. This could happen when the UndoableAction till which the UndoableAction's have 
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 o be re-done is not found to be present with the AdvancedUndoManager.
\par \hich\af1\dbch\af13\loch\f1 Note that the undo() method of the UndoableAction is not supposed to throw any exception [even runtime exception] and hence this will "not" act as a wrapper exception as the redo() metho\hich\af1\dbch\af13\loch\f1 
d of UndoableAction does not throw any exception. Also it is worthwhile to note the redoActions() methods of ActionManager will "not" throw this exception as the redoActions() method of ActionManager do not throw any checked exceptions.
\par 
\par }{\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 ActionManagerConfi\hich\af1\dbch\af13\loch\f1 gurationException [custom]
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
This exception is thrown from the constructor of ActionManager when it is initialized with a configuration namespace to read the required configuration properties from the configuration file and the required properties are either
\hich\af1\dbch\af13\loch\f1  found to be missing or found to contain invalid values. It also acts as a wrapper exception over the exception thrown from the Configuration Manager component.
\par \hich\af1\dbch\af13\loch\f1 Basically this exception indicates that the initialization of ActionManager is not possible bec\hich\af1\dbch\af13\loch\f1 
ause of problems in the configuration file [missing properties or properties with invalid values] or the configuration of the Configuration Manager component.
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 1.6\tab Thread Safety
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
This component is not required to be thread-safe and is not thread-safe. The i\hich\af1\dbch\af13\loch\f1 
nterfaces defined by this component like the Action, TransientAction and UndoableAction provide the flexibility to its implementation to be either thread-safe or not. 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 The ActionManager class has immutable instance members but cannot be called thread-safe \hich\af1\dbch\af13\loch\f1 
since it provides methods for executing the Action and also methods for undo and redo of UndoableAction and the implementations of the Actions and the UndoableAction interface might or might not be thread-safe and since this class invokes methods of these
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 interfaces, cannot be attributed to be thread-safe.
\par \hich\af1\dbch\af13\loch\f1 The adapter class of TransientUndoableAction has mutable instance members and no synchronized access is made to these and hence the class is not thread-safe. Also it provides methods for executing the Tra
\hich\af1\dbch\af13\loch\f1 
nsientAction it is adapting and the TransientAction instance might not be thread-safe. Similarly the adapter class of CompoundUndoableAction has mutable instance members and no synchronized access is made to these and hence the class is not thread-safe. A
\hich\af1\dbch\af13\loch\f1 l\hich\af1\dbch\af13\loch\f1 so it delegates the methods to the corresponding methods on the CompoundEdit instance it is enclosing and since the class CompoundEdit is not thread-safe, this class is also not thread-safe.
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 The AdvancedUndoManager class }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 has no members of its own but acces\hich\af1\dbch\af13\loch\f1 
ses the members from the super class and allows the undo/redo operations of the UndoableAction and these operations are not as such required to be thread-safe and hence this class is not thread-safe.
\par \hich\af1\dbch\af13\loch\f1 Finally the AdvancedCompoundEdit class has no members of\hich\af1\dbch\af13\loch\f1  its own but accesses the members from the super class which is not thread-safe and hence this class is not thread-safe.}{
\f1\fs20\cf1\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 Hence on the whole the component is not thread-safe. The component can be used in a thread-safe manner by firstly making sure that the \hich\af1\dbch\af13\loch\f1 
Action implementations that are passed/used with this component are thread-safe and accessing the methods of ActionManager, TransientUndoableAction and CompoundUndoableAction  in synchronized blocks with the synchronization done on the instance on which t
\hich\af1\dbch\af13\loch\f1 h\hich\af1\dbch\af13\loch\f1 e methods are being called [basically "this" instance].
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa120\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\lang1036\langfe2052\langnp1036\insrsid12343757 
\hich\af1\dbch\af13\loch\f1 2.\tab Environment Requirements
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\lang1036\langfe2052\langnp1036\insrsid12343757 
\hich\af1\dbch\af13\loch\f1 2.1\tab Environment
\par }\pard\plain \ql \li432\ri0\sa120\nowidctlpar\faauto\rin0\lin432\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\lang1036\langfe2052\langnp1036\insrsid12343757 \tab \bullet \hich\af0\dbch\af13\loch\f0  }{
\f1\fs20\lang1036\langfe2052\langnp1036\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Development}{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1  language}{\f1\fs20\lang1036\langfe2052\langnp1036\insrsid12343757 \hich\af1\dbch\af13\loch\f1 : Java1.5}
{\insrsid12343757 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\lang1036\langfe2052\langnp1036\insrsid12343757 \tab }{\insrsid12343757 \bullet \hich\af0\dbch\af13\loch\f0  }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Compile target: Java1.5}{
\insrsid12343757 
\par }{\b\f1\fs20\insrsid12343757 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 2.2\tab 
TopCoder Software Components}{\b\f1\fs20\ul\insrsid12343757 
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\ul\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Configuration Manager 2.1.5
\par }\pard \ql \li701\ri0\sa120\nowidctlpar\faauto\rin0\lin701\itap0 {\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 It will be used in ActionManager to load configuration values from configuration file.
\par 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\ul\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Base Exception 1.0
\par }\pard \ql \li722\ri0\sa120\nowidctlpar\faauto\rin0\lin722\itap0 {\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
The exception ActionExecutionException and ActionManagerConfigurationException defined by this component extends from BaseException from the BaseExce\hich\af1\dbch\af13\loch\f1 
ption 1.0 component. All other exceptions defined by this component extend from ActionExecutionException.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\b\f1\fs20\ul\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 Logging Wrapper 1.2}{\b\f1\fs20\ul\cf6\insrsid12343757 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f1\fs20\ul\insrsid12343757 
\par }\pard \ql \fi-360\li1080\ri0\nowidctlpar\faauto\rin0\lin1080\itap0 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 It is used for performing logging and tracing as mentioned in section 1.3.1.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid12343757 \tab 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa120\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 2.3\tab 
Third Party Components
\par }\pard\plain \s3\ql \li720\ri0\sb120\sa120\nowidctlpar\tx720\faauto\outlinelevel2\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 None
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 3.\tab Installation 
\hich\af1\dbch\af13\loch\f1 and Configuration
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 3.1\tab Package Name

\par }\pard\plain \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\insrsid12343757 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 com.topcoder.util.actionmanager }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 
 [Main package of the component. No other sub-packages are required for this components design]
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\i\f1\fs20\cf2\insrsid12343757 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 3.1\tab 
Configuration Parameters
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\i\f1\fs20\cf2\insrsid12343757 
\par 
\par }\trowd \irow0\irowband0\ts11\trgaph10\trrh600\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth512\clshdrawnil \cellx502\clvertalt\clbrdrt\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2945\clshdrawnil \cellx3447\clvertalt\clbrdrt
\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth5183\clshdrawnil \cellx8630\pard \qc \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {
\b\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 No\cell \hich\af1\dbch\af13\loch\f1 Property\cell \hich\af1\dbch\af13\loch\f1 Description\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {
\b\f1\fs20\cf1\insrsid12343757 \trowd \irow0\irowband0\ts11\trgaph10\trrh600\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr
\brdrnone \cltxlrtb\clftsWidth3\clwWidth512\clshdrawnil \cellx502\clvertalt\clbrdrt\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2945\clshdrawnil \cellx3447\clvertalt
\clbrdrt\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth5183\clshdrawnil \cellx8630\row }\trowd \irow1\irowband1
\ts11\trgaph10\trrh1034\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth512\clshdrawnil \cellx502
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2945\clshdrawnil \cellx3447\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 
\clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth5183\clshdrawnil \cellx8630\pard \ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1\cell }{\f1\fs20\ul\cf1\insrsid12343757 
\hich\af1\dbch\af13\loch\f1 Name
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 MaximumUndoableActions
\par }{\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Required
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 true
\par }{\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Configuration Namespace
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 com.topcoder.util.actionmanager \cell \hich\af1\dbch\af13\loch\f1 
This property is a required property and a single-valued property and specifies the maximum number of UndoableAction(s) that should be maintained in the UndoManager [AdvancedUndoManager\hich\af1\dbch\af13\loch\f1 
] instance for performing the Undo-Redo operations, and once the        limit is crossed, the UndoManager will flush out the old entries to maintain the size of the entries in the UndoManager.
\par \hich\af1\dbch\af13\loch\f1 The value has to be an integer value greater than 0.\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf1\insrsid12343757 \trowd \irow1\irowband1
\ts11\trgaph10\trrh1034\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth512\clshdrawnil \cellx502
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2945\clshdrawnil \cellx3447\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 
\clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth5183\clshdrawnil \cellx8630\row }\trowd \irow2\irowband2\ts11\trgaph10\trrh928\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrnone \clbrdrl
\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth512\clshdrawnil \cellx502\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2945\clshdrawnil \cellx3447\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth5183\clshdrawnil \cellx8630\pard 
\ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 2\cell }{\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Name
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Lo\hich\af1\dbch\af13\loch\f1 ggerName
\par }{\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Required
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 false
\par }{\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Configuration Namespace
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 com.topcoder.util.actionmanager\cell \hich\af1\dbch\af13\loch\f1 
This property is an optional property and a single-valued property and specifies the name of the instance of the Log from the Logging Wrapper 1.2 compone\hich\af1\dbch\af13\loch\f1 nt to be used for performing the logging.\cell }\pard 
\ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf1\insrsid12343757 \trowd \irow2\irowband2\ts11\trgaph10\trrh928\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrnone \clbrdrl
\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth512\clshdrawnil \cellx502\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone 
\cltxlrtb\clftsWidth3\clwWidth2945\clshdrawnil \cellx3447\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth5183\clshdrawnil \cellx8630\row }\pard 
\ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 3\cell }\pard \ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Name
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 LoggingLevel
\par }{\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Required
\par }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 false
\par }{\f1\fs20\ul\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Configuration Namespace
\par }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 com.topcoder.util.actionmanager\cell \hich\af1\dbch\af13\loch\f1 
This is an optional property and a single valued property. If the value is not specified or an invalid value is specified \hich\af1\dbch\af13\loch\f1 
then it defaults to the value of "DEBUG". This property can take the value "OFF", "INFO", "WARN", "DEBUG" or "ERROR" and specifies the level of logging to be done by the ActionManager.}{\f1\fs20\cf1\insrsid12864843 \hich\af1\dbch\af13\loch\f1  
\hich\af1\dbch\af13\loch\f1 Note, if other value is specified, then it will result in an exception.}{\f1\fs20\cf1\insrsid12343757 
\par }{\f1\fs20\cf1\insrsid12343757 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\fs20\cf1\insrsid12343757 \trowd \irow3\irowband3\lastrow 
\ts11\trgaph10\trrh928\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth512\clshdrawnil \cellx502
\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrnone \cltxlrtb\clftsWidth3\clwWidth2945\clshdrawnil \cellx3447\clvertalt\clbrdrt\brdrnone \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 
\clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth5183\clshdrawnil \cellx8630\row }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f1\fs20\cf2\insrsid12343757 
\par 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 The configuration file "Action_Manager.xml" defines the configurati\hich\af1\dbch\af13\loch\f1 
on required for this component. This file is provided in the "conf" and in the "docs" folder of the distribution and is quite well documentation with respect to the properties and the value it can take and what is the need for the property. This sample co
\hich\af1\dbch\af13\loch\f1 n\hich\af1\dbch\af13\loch\f1 figuration file has been provided below:
\par 
\par }\trowd \irow0\irowband0\lastrow \ts11\trgaph108\trleft472\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth8856\clshdrawnil \cellx9328\pard\plain \s1\ql \li0\ri0\sb120\sa60\nowidctlpar\intbl\tx360\faauto\outlinelevel0\rin0\lin0 
\fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f2\fs18\cf9\insrsid12343757 \hich\af2\dbch\af13\loch\f2 <?xml version="1.0" ?>
\par \hich\af2\dbch\af13\loch\f2 <!-- 
\par \hich\af2\dbch\af13\loch\f2 
This is the configuration file for this component and defines the set of configuration properties for the component. These configuration properties define the information like maximum number of UndoableAction(s) that should be maintained in the UndoManage
\hich\af2\dbch\af13\loch\f2 r\hich\af2\dbch\af13\loch\f2 
 [AdvancedUndoManager] instance for performing the Undo-Redo operations, and once the limit is crossed, the UndoManager will flush out the old entries to maintain the size of the entries in the UndoManager.
\par \hich\af2\dbch\af13\loch\f2 It also contains the configuration properties tha\hich\af2\dbch\af13\loch\f2 t define the instance name of the Log to be used for performing the logging using the Logging Wrapper 1.2 component.
\par \hich\af2\dbch\af13\loch\f2 Note: This is a sample configuration file. It does not contain valid configuration data and cannot be used for testing. It's purpose is to \hich\af2\dbch\af13\loch\f2 be used as a reference for writing other config files.

\par \hich\af2\dbch\af13\loch\f2 -->
\par \hich\af2\dbch\af13\loch\f2 <CMConfig>
\par \hich\af2\dbch\af13\loch\f2   <Config name="com.topcoder.util.actionmanager">
\par \hich\af2\dbch\af13\loch\f2 <!--
\par \hich\af2\dbch\af13\loch\f2 This property is a required property and a single-valued property and specifies the maximum number of UndoableAction(s) that should\hich\af2\dbch\af13\loch\f2 
 be maintained in the UndoManager [AdvancedUndoManager] instance for performing the Undo-Redo operations, and once the limit is crossed, the UndoManager will flush out the old entries to maintain the size of the entries in the UndoManager. The value has t
\hich\af2\dbch\af13\loch\f2 o\hich\af2\dbch\af13\loch\f2  be an integer value greater than 0.
\par \hich\af2\dbch\af13\loch\f2 -->
\par \hich\af2\dbch\af13\loch\f2     <Property name="MaximumUndoableActions">
\par \hich\af2\dbch\af13\loch\f2       <Value> 10 </Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2 <!--
\par \hich\af2\dbch\af13\loch\f2 This property is an optional property and a single-valued property and specifies the name of the instance of the Log from t\hich\af2\dbch\af13\loch\f2 he Logging Wrapper 1.2 component to be used for performing the logging.

\par \hich\af2\dbch\af13\loch\f2 -->
\par \hich\af2\dbch\af13\loch\f2     <Property name="LoggerName">
\par \hich\af2\dbch\af13\loch\f2       <Value>DefaultLog</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2 <!-- 
\par \hich\af2\dbch\af13\loch\f2 This is an optional property and a single valued property. If the value is not specified or a\hich\af2\dbch\af13\loch\f2 
n invalid value is specified then it defaults to the value of "DEBUG". This property can take the value "OFF", "WARN", "DEBUG" or "ERROR" and specifies the level of logging to be done by the ActionManager.
\par \hich\af2\dbch\af13\loch\f2 -->
\par \hich\af2\dbch\af13\loch\f2     <Property name="LoggingLevel">
\par \hich\af2\dbch\af13\loch\f2       <Valu\hich\af2\dbch\af13\loch\f2 e>DEBUG</Value>
\par \hich\af2\dbch\af13\loch\f2     </Property>
\par \hich\af2\dbch\af13\loch\f2   </Config>
\par \hich\af2\dbch\af13\loch\f2 </CMConfig>}{\b\f2\fs18\insrsid12343757 \cell }\pard\plain \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {
\b\f2\fs18\insrsid12343757 \trowd \irow0\irowband0\lastrow \ts11\trgaph108\trleft472\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth8856\clshdrawnil \cellx9328\row }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f1\fs20\cf2\insrsid12343757 
\par }{\i\f1\fs20\cf2\insrsid12343757 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 3.3\tab 
Dependencies Configuration
\par }\pard\plain \ql \fi-360\li1080\ri0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f3\insrsid12343757 \loch\af3\dbch\af13\hich\f3 \'b7}{\f1\fs20\insrsid12343757 \tab 
\hich\af1\dbch\af13\loch\f1 Please review the components "Configuration Manager 2.1.5", "Base Exception 1.0", and "Logging Wrapper 1.2" to make it work.}{\insrsid12343757 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\i\f1\fs20\cf2\insrsid12343757 
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 4.\tab Usage Notes

\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 4.1\tab 
\hich\af1\dbch\af13\loch\f1 Required steps to test the component
\par }\pard\plain \ql \fi-360\li1080\ri0\sa120\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f3\fs20\insrsid12343757 \loch\af3\dbch\af13\hich\f3 \'b7}{
\f1\fs20\insrsid12343757 \tab \hich\af1\dbch\af13\loch\f1 Extract the component distribution.}{\insrsid12343757 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f3\fs20\insrsid12343757 \loch\af3\dbch\af13\hich\f3 \'b7\'20\'20\'20\'20\'20\'20}{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Execute \hich\f1 \lquote \loch\f1 ant test\hich\f1 
\rquote \loch\f1  within the directory that the distribution was extracted to.}{\insrsid12343757 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 4.2\tab 
Required steps to use the component
\par }\pard\plain \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f3\fs20\insrsid12343757 \loch\af3\dbch\af13\hich\f3 \'b7}{\f1\fs20\insrsid12343757 
\hich\af1\dbch\af13\loch\f1     The required components are configured correctly \hich\af1\dbch\af13\loch\f1 and are available at runtime.}{\insrsid12343757 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 4.3\tab Demo
\par 
\par }\trowd \irow0\irowband0\lastrow \ts11\trgaph10\trrh14938\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrs\brdrw5\brdrcf1 
\cltxlrtb\clftsWidth3\clwWidth8640\clshdrawnil \cellx8630\pard\plain \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\ul\insrsid12343757 
\hich\af1\dbch\af13\loch\f1 Note:}{\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1  }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 The handling of the exceptions has not been shown in the demo.
\par 
\par \hich\af1\dbch\af13\loch\f1 The demo is shown from the Customer usage of the TC UML Tool and how the TC UML Tool will be using to this component corresponding to user intera\hich\af1\dbch\af13\loch\f1 ction with the TC UML Tool.}{\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 
\par }\pard \ql \li270\ri0\nowidctlpar\intbl\faauto\rin0\lin270 {\b\f1\fs20\ul\insrsid12343757 \hich\af1\dbch\af13\loch\f1 1. Starting of the TC UML Tool:
\par 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 On the starting of the TC UML Tool, the TC UML Tool will need to create an instance of ActionManager and cache it further usage. The creation of an instance of ActionManager can be done in any o
\hich\af1\dbch\af13\loch\f1 ne of the following ways:
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // ActionManager with no logging to be done and with max UndoableAction limit set to 10}{\f1\fs20\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 a. ActionManager manager = new ActionManager(); }{\f1\fs20\insrsid12343757 
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // ActionManager initialized from the configuration values specified in the passed namespac\hich\af1\dbch\af13\loch\f1 e
\par \hich\af1\dbch\af13\loch\f1 // in the configuration file.}{\f1\fs20\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 b. ActionManager manager = new ActionManager( "com.topcoder.util.actionmanager" );
\par }{\f1\fs20\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // ActionManager created by explicitly specifying the max UndoableAction limit to 50 and 
\par \hich\af1\dbch\af13\loch\f1 // specifying the Log instance to be used and the \hich\af1\dbch\af13\loch\f1 Level of logging to be performed to ERROR.
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 c. Log logger = LogFactory.getInstance().getLog("MyLog");
\par \hich\af1\dbch\af13\loch\f1     ActionManager manager = new ActionManager( 50, logger, Level.ERROR );
\par }{\b\f1\fs20\ul\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 2. Execution of Actions corresponding to the users usage of the TC UML Tool:
\par 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Consider the user of the TC UML component does the following set of operations:
\par \hich\af1\dbch\af13\loch\f1 1. Opens an existing Project.
\par \hich\af1\dbch\af13\loch\f1 2. Adds some Classes in the model and attributes to these classes.
\par \hich\af1\dbch\af13\loch\f1 3. Deletes a set of classes together.
\par \hich\af1\dbch\af13\loch\f1 4. Moves the set of the Classes from one \hich\af1\dbch\af13\loch\f1 location to another.
\par \hich\af1\dbch\af13\loch\f1 5. Prints the Class Diagram of the Project.
\par \hich\af1\dbch\af13\loch\f1 6. Save the project.
\par \hich\af1\dbch\af13\loch\f1 7. Closes this project and opens a new project.
\par \hich\af1\dbch\af13\loch\f1 8. Adds some classes in the project.
\par \hich\af1\dbch\af13\loch\f1 9. Reverts the action he has performed.
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Corresponding to each of these steps the dif\hich\af1\dbch\af13\loch\f1 ferent types of actions that will be created and what happens when these actions are executed is mentioned as follows:
\par }{\b\f1\fs20\ul\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 a. Execution of Simple Action:
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // A Simple Action will be created for Steps 1, 7 i.e. Opening of a Project and Closing of a 
\par \hich\af1\dbch\af13\loch\f1 // Project\hich\af1\dbch\af13\loch\f1 . Creation of such an Action and execution of the Action is shown below. 
\par \hich\af1\dbch\af13\loch\f1 // The name of the Action used here is for demo purpose and assumes a no-argument 
\par \hich\af1\dbch\af13\loch\f1 // constructor to be present and the actual Action names from the other TC UML component will 
\par \hich\af1\dbch\af13\loch\f1 // b\hich\af1\dbch\af13\loch\f1 e different.
\par 
\par \hich\af1\dbch\af13\loch\f1 // Creating the Action for Opening a Project.
\par \hich\af1\dbch\af13\loch\f1 // Assuming a no-argument constructor for this demo. The actual Action will be taking 
\par \hich\af1\dbch\af13\loch\f1 // parameters, but not known at this time.
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Action openProject = new OpenProjectAction(); 
\par }{\f1\fs20\cf11\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 // Executing the "openProject" Action. This should clear the state of the AdvancedUndoManager
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.executeAction( openProject );}{\f1\fs20\cf11\insrsid12343757 
\par 
\par \hich\af1\dbch\af13\loch\f1 // Creating the Action for Closing a Project. 
\par \hich\af1\dbch\af13\loch\f1 // Assuming a no-argument constructor for this demo. The actual Action will\hich\af1\dbch\af13\loch\f1  be taking 
\par \hich\af1\dbch\af13\loch\f1 // parameters, but not known at this time.
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Action closeProject = new CloseProjectAction();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Executing the "closeProject" Action. This should clear the state of the AdvancedUndoManager
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.executeAction( closeProject );}{\f1\fs20\cf11\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 
\par }{\b\f1\fs20\ul\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Note:}{\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1  }{\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 "openProje\hich\af1\dbch\af13\loch\f1 
ct" and "closeProject" should not be instance of TransientAction or UndoableAction. (Basically the instanceof operator for these Actions against TransientAction and UndoableAction should return false).}{\b\f1\fs20\ul\insrsid12343757 
\par 
\par 
\par 
\par \hich\af1\dbch\af13\loch\f1 b. Execution of Transient Action:
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // A T\hich\af1\dbch\af13\loch\f1 ransient Action will be created for Steps 5 and 6 i.e. Printing a class diagram and Saving a 
\par \hich\af1\dbch\af13\loch\f1 // Project. 
\par 
\par \hich\af1\dbch\af13\loch\f1 // Creating the Action for Printing a class diagram. 
\par \hich\af1\dbch\af13\loch\f1 // Assuming a no-argument constructor for this demo. The actual Action will be taking 
\par \hich\af1\dbch\af13\loch\f1 // para\hich\af1\dbch\af13\loch\f1 meters, but not known at this time.
\par }{\f1\fs20\cf9\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 Action printAction = new PrintClassDiagramAction();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Creating the Action for saving a project. 
\par \hich\af1\dbch\af13\loch\f1 // Assuming a no-argument constructor for this demo. The actual Action will be taking 
\par \hich\af1\dbch\af13\loch\f1 // parameters, but not known at this time.
\par }{\f1\fs20\cf9\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 Action saveAction = new SaveProjectAction();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // (printAction instanceof TransientAction) and (saveAction instanceof TransientAction) should 
\par \hich\af1\dbch\af13\loch\f1 // return true.}{\b\f1\fs20\ul\insrsid12343757 
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Executing these TransientAction. These should not \hich\af1\dbch\af13\loch\f1 change the state of the 
\par \hich\af1\dbch\af13\loch\f1 // AdavancedUndoManager within the ActionManager.
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.executeAction( printAction );
\par \hich\af1\dbch\af13\loch\f1 manager.executeAction( saveAction );
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Creation of the Undoable wrapper for these TransientActions.
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 UndoableAction undoableWrapperPrintActi\hich\af1\dbch\af13\loch\f1 on = new TransientUndoableAction( printAction, "PrintAction", null); // Created without specifying the Log instance.
\par \hich\af1\dbch\af13\loch\f1 UndoableAction undoableWrapperSaveAction = new TransientUndoableAction( saveAction, "SaveAction", logger); // Created with the Log instance\hich\af1\dbch\af13\loch\f1  obtained in step 1.c.
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // The calls to the undo() and redo() methods will be not do anything. Basically the following 
\par \hich\af1\dbch\af13\loch\f1 // calls will not do anything.}{\f1\fs20\cf9\insrsid12343757 
\par 
\par \hich\af1\dbch\af13\loch\f1 undoableWrapperPrintAction.undo();
\par \hich\af1\dbch\af13\loch\f1 undoableWrapperSaveAction.redo();}{\b\f1\fs20\ul\insrsid12343757 
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // However the following calls wil\hich\af1\dbch\af13\loch\f1 l affect the state of the AdvancedUndoManager within the 
\par \hich\af1\dbch\af13\loch\f1 // ActionManager.
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.executeAction( undoableWrapperPrintAction );
\par \hich\af1\dbch\af13\loch\f1 manager.executeAction( undoableWrapperSaveAction );
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Getting the last exception if any had occured in the execution of TransientUndoableAction.
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 ActionExecutionException exception = ((TransientUndoableAction)undoableWrapperPrintAction).getLastException(); }{\b\f1\fs20\ul\insrsid12343757 
\par 
\par \hich\af1\dbch\af13\loch\f1 c. Execution of UndoableAction:
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // An UndoableAc\hich\af1\dbch\af13\loch\f1 tion will be created for steps 2,3,4 and 8 mentioned above. Note that all the
\par \hich\af1\dbch\af13\loch\f1 // Action instances created here shall return true when they are checked to be instance of 
\par \hich\af1\dbch\af13\loch\f1 // UndoableAction and should return false when checked to be instance of TransientActi\hich\af1\dbch\af13\loch\f1 on.}{\b\f1\fs20\ul\cf11\insrsid12343757 
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Creation of an UndoableAction for the Adding a class to the diagram.}{\b\f1\fs20\ul\cf11\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Assuming a no-argument constructor for this demo. The actual Action will be taking 
\par \hich\af1\dbch\af13\loch\f1 // parameters, but not known at this time.
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 UndoableAction addClassAction = new AddClassDiag\hich\af1\dbch\af13\loch\f1 ramAction();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Creation of an UndoableAction for the Adding a members to the class.}{\b\f1\fs20\ul\cf11\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Assuming a no-argument constructor for this demo. The actual Action will be taking 
\par \hich\af1\dbch\af13\loch\f1 // parameters, but not known at this time.
\par }{\f1\fs20\cf9\insrsid12343757 
\par \hich\af1\dbch\af13\loch\f1 UndoableAction addClassMemberAction = n\hich\af1\dbch\af13\loch\f1 ew AddClassMemberAction();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Executing these Actions. Should change the state of the AdvancedUndoManager when these
\par \hich\af1\dbch\af13\loch\f1 // when these actions are executed.
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.executeAction( addClassAction );
\par \hich\af1\dbch\af13\loch\f1 manager.executeAction( addClassMemberAction );
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Creating UndoableActions for deleting a set of classes and adding them to a 
\par \hich\af1\dbch\af13\loch\f1 // CompoundUndoableAction so that these are executed as a unit and can be un-done/re-done
\par \hich\af1\dbch\af13\loch\f1 // as a unit.
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 UndoableAction compoundAction = new CompoundUndoableAction();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Creat\hich\af1\dbch\af13\loch\f1 e a DeleteClassAction [not from this component, but a similar action (may be with 
\par \hich\af1\dbch\af13\loch\f1 // different name) will be present in the other component of the TC UML Tool, for each of the
\par \hich\af1\dbch\af13\loch\f1 // class to be deleted. [Only one shown here, others to be done similarly]
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Und\hich\af1\dbch\af13\loch\f1 oableAction deleteClassAction = new DeleteClassAction();
\par \hich\af1\dbch\af13\loch\f1 compoundAction.addEdit( deleteClassAction );
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Execute the compoundAction. All actions inside it will be executed and the state of the 
\par \hich\af1\dbch\af13\loch\f1 // AdvancedUndoManager will be changed.
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.executeActio\hich\af1\dbch\af13\loch\f1 n( compoundAction );
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Getting the last Action that can be undone.
\par \hich\af1\dbch\af13\loch\f1 // The "action" instance returned should be "compoundAction" instance.
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 UndoableAction action = manager.getUndoableActionToBeUndone();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Getting the LastException that might have occured\hich\af1\dbch\af13\loch\f1  in executing the "compoundException".
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 Exception exception = ((CompoundUndoableAction)compoundAction).getLastException();}{\b\f1\fs20\ul\insrsid12343757 
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Performing the undo of the UndoableActions till "compoundAction". In this case, since 
\par \hich\af1\dbch\af13\loch\f1 // "compoundAction" is the last one and so only the "compoundAction" will be undone.}{\f1\fs20\cf9\insrsid12343757 
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.undoActions( compoundAction );
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Getting the last Action that can be redone.
\par \hich\af1\dbch\af13\loch\f1 // The "action" instance returned should be "compoundAction" instance.
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 UndoableActi\hich\af1\dbch\af13\loch\f1 on action = manager.getUndoableActionToBeRedone();
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Performing the undo of the UndoableActions till "compoundAction". In this case, since 
\par \hich\af1\dbch\af13\loch\f1 // "compoundAction" is the last one and so only the "compoundAction" will be undone.}{\f1\fs20\cf9\insrsid12343757 
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.redoActions( compoun\hich\af1\dbch\af13\loch\f1 dAction );
\par }{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Getting the List of UndoableAction(s) that can be Undone. 
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 List undoActions = manager.getUndoableActionsToBeUndone();}{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // Getting the List of UndoableAction(s) that can be Undone. 
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 List redoActions = manager.getUndoableActionsToBeRedone();}{\b\f1\fs20\ul\insrsid12343757 
\par }{\f1\fs20\cf9\insrsid12343757 
\par 
\par }{\b\f1\fs20\ul\insrsid12343757 \hich\af1\dbch\af13\loch\f1 3. Getting the Presentation Names for the UndoableActions:
\par }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\b\f1\fs20\ul\insrsid12343757 
\par }\pard \ql \li270\ri0\nowidctlpar\intbl\faauto\rin0\lin270 {\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1  // Getting the Presentation names for the UndoableActions. Using the 
\par \hich\af1\dbch\af13\loch\f1 // "undoableWrapperPrintAction" created in step 2.b for this.
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 String presentationName = undoableWrapperPrintAction.getPresentationName();
\par \hich\af1\dbch\af13\loch\f1 String undoPresentationName = undoableWrapperPrintAction.getUndoPresentationName();
\par \hich\af1\dbch\af13\loch\f1 String redoPresentationName = undoableWrapperPrintAction.getRedoPresentationName();
\par 
\par 
\par }{\b\f1\fs20\ul\insrsid12343757 \hich\af1\dbch\af13\loch\f1 4. Marking\hich\af1\dbch\af13\loch\f1  an UndoableAction not to be used further:
\par }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\b\f1\fs20\ul\insrsid12343757 
\par }\pard \ql \li270\ri0\nowidctlpar\intbl\faauto\rin0\lin270 {\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1  // Using the "undoableWrapperPrintAction" created in step 2.b for this.
\par 
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 undoableWrapperPrintAction.die();
\par 
\par }{\f1\fs20\cf11\insrsid12343757 \hich\af1\dbch\af13\loch\f1 // After this call the following call will thrown an ActionExecutionException.
\par }{\f1\fs20\cf9\insrsid12343757 \hich\af1\dbch\af13\loch\f1 manager.executeAction( u\hich\af1\dbch\af13\loch\f1 ndoableWrapperPrintAction );
\par 
\par }{\f1\insrsid12343757 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\f1\insrsid12343757 \trowd \irow0\irowband0\lastrow \ts11\trgaph10\trrh14938\trleft-10\trftsWidth1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3 
\clvertalt\clbrdrt\brdrs\brdrw5\brdrcf1 \clbrdrl\brdrs\brdrw5\brdrcf1 \clbrdrb\brdrs\brdrw5\brdrcf1 \clbrdrr\brdrs\brdrw5\brdrcf1 \cltxlrtb\clftsWidth3\clwWidth8640\clshdrawnil \cellx8630\row }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {
\f1\fs20\insrsid12343757 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\f1\fs20\insrsid12343757 \hich\af1\dbch\af13\loch\f1 5.\tab 
Future Enhancements
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp2052 {\f1\fs20\cf1\insrsid12343757 \hich\af1\dbch\af13\loch\f1 None at this moment.}{
\f1\fs20\insrsid12343757 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f1\fs20\insrsid12343757 
\par }}