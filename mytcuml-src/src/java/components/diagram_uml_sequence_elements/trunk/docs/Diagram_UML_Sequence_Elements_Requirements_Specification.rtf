{\rtf1\mac\ansicpg10000\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\upr{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Palatino};}{\f3\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}Symbol{\*\falt Symbol};}{\f25\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}ArialMT{\*\falt Arial};}{\f374\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}Arial-BoldMT{\*\falt Arial};}{\f375\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}Arial-ItalicMT{\*\falt Arial};}{\f376\fmodern\fcharset77\fprq0{\*\panose 00000000000000000000}CourierNewPSMT{\*\falt Courier New};}}{\*\ud{\fonttbl{\f0\fnil\fcharset256\fprq2{\*\panose 00020206030504050203}Times New Roman{\*\falt Palatino};}{\f3\fnil\fcharset2\fprq2{\*\panose 00020005000000000000}Symbol{\*\falt Symbol};}{\f25\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}ArialMT{\*\falt Arial};}{\f374\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}Arial-BoldMT{\*\falt Arial};}{\f375\fswiss\fcharset77\fprq0{\*\panose 00000000000000000000}Arial-ItalicMT{\*\falt Arial};}{\f376\fmodern\fcharset77\fprq0{\*\panose 00000000000000000000}CourierNewPSMT{\*\falt Courier New};}}}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 Normal Table;}}{\*\rsidtbl \rsid3236647}{\info{\title Requirements Specification}{\subject UML Tool}{\author Luca}{\keywords Software Requirements}{\operator Justin Gasper}{\creatim\yr2007\mo6\dy21\hr8\min59}{\revtim\yr2007\mo6\dy21\hr9\min3}{\version5}{\edmins4}{\nofpages5}{\nofwords1842}{\nofchars10505}{\*\company TopCoder Software}{\nofcharsws12900}{\vern24577}}\margl1440\margr1440 \ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dgmargin\dghspace120\dgvspace120\dghorigin1440\dgvorigin1440\dghshow0\dgvshow3\jcompress\viewkind1\viewscale125\nolnhtadjtbl\rsidroot3236647 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\sb120\sa60\sl240\slmult0\nowidctlpar\faauto\rin0\lin0\itap0 \lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f374\insrsid3236647 Diagram UML Sequence Elements }{\b\f374\cf2\insrsid3236647 1.1}{\b\f374\insrsid3236647  Requirements Specification\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\insrsid3236647 1.\tab Scope\par }{\b\f374\fs20\insrsid3236647 1.1\tab Overview\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 The Diagram UML Class Elements component provides the graphical diagram elements and edges representing the model elements specific to a sequence diagram.\par }{\f25\fs20\cf6\insrsid3236647 Version 1.1 adds the lifeline drawing functionality on the Object and will fix the way the edges are drawn. The edges will be fixed so that each UML line will have only one corresponding edge in the diagram, not two.\par An edge layout algorithm will be provided also.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\fs20\insrsid3236647 1.2\tab Logic Requirements\par }{\i\f375\fs20\insrsid3236647 1.2.1\tab Object Node\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 This class is a concrete Node. It takes its information from the Object from the UML Model and from the GraphNode associated with it.\par The structure of the GraphNode that corresponds to it is given in section 3.2.1.\par The stereotype compartment could be hidden. The \lquote isVisible\rquote  attribute of the compartment graph node is for this property. There should be methods to tell the node that the compartment\rquote s visibility has changed. The node will be resized and an event will be triggered, to signal the size change (the reason is also passed, as a string). The node should also have a method that computes the preferred size, according to the new visible/hidden compartment.\par The name compartment will show \ldblquote anonymous\rdblquote  if there is no name, or it could be hidden.\par The stereotype compartment do not react to any events. It lets the events pass to the component, which reacts as described below.\par The whole component will react to a mouse double-click event, by showing the edit control of the DiagramViewer in order to edit the name of the node. The text of the Name compartment will not be shown while the edit control is up (though the node will not be resized). The event should provide to the DiagramViewer the position where to show the edit control, so it fits on top of the Name compartment, and the initial text. It will also register a listener to receive the event that the text was entered or cancelled in the edit control. It will remove the listener after receiving the event.\par The new name will not be set. An event is generated instead, with the old and new name, and with the node and graph node for which the name is set. The node will also provide a method to check the size that will be required for the node if the name would be set (this is required, as other representations of the same model element could be resized as a side effect). The application will register for the event and, eventually it will set the new name. The component should make it easy for the application to set the new name, by performing the resize needed when the name is changed. The method for setting the name will perform the resize of the name, and it will generate a resize event (the reason is also passed, as a string).\par The graphical component will not be implemented as a drag and drop DropTarget, as it is not a container. However, it should not interfere with the drag and drop action initiated by the user. The user should be able to drop the element on top of the node and the event should be handled by the diagram behind it (as the intention of the user is to add the element to the diagram).\par The node should define a minimum size. It should also have a method that computes the preferred size, according to the name compartment and the stereotype compartment. It should also provide a method to compute the preferred size if the name or the stereotypes change.\par The node will show all the selection corners, when it is selected. The corners will be shown around the shape.\par In case the diagram viewer\rquote s flag for adding new elements from the toolbar is on, the node should react to mouse events differently, by letting the events pass to the element behind.\par There will be a connector for the edges defined for the node. It will behave differently than the connector for the rectangle shaped elements. The last segment of the edge should point to the closest point on the vertical axis of the shape.\par There should be a way to set a popup that will be shown if a popup trigger mouse event action occurs. There will be a popup general for the component.\par The node should have several properties configurable through graph node:\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab the stroke color (defaults to black)\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab the fill color (defaults to black)\par -\tab the font color (defaults to black)\par -\tab the font family (defaults to Arial)\par -\tab the font size (defaults to 10).\par The name could be shown in italics if the instance is abstract.\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 The component should receive events only in the drawn shape.\par The component should show\par The object can move only horizontally. It should have a configurable location on the \ldblquote y\rdblquote  axis. When the header is resized (due to stereotype compartment being shown), this location could be changed.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 1.2.2\tab Create Message Edge\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 This class is a concrete Edge. It takes its information from the Link with a Stimulus with a Procedure that has a CreateObjectAction as the Action class from the UML Model and from the GraphEdge associated with it.\par The structure of the GraphEdge that corresponds to it is given in section 3.2.1.\par The stereotype compartment could be hidden. The \lquote isVisible\rquote  attribute of the compartment graph node is for this property. There should be methods to tell the edge that the compartment\rquote s visibility has changed.\par The edge has a continuous line. The stereotype compartment contains the \ldblquote create\rdblquote  stereotype (as KeywordMetaclass). It cannot be removed, it is shown first and is separated from the other stereotypes by a blank space.\par There should be two end types defined:\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab sender end: none\par }\pard \ql \fi-360\li1800\ri0\sa120\sl240\slmult0\nowidctlpar\tx1800\faauto\rin0\lin1800\itap0 {\f376\fs20\insrsid3236647 o\tab }{\f25\fs20\insrsid3236647 ----\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab receiver end: a filled arrow, with the color of the edge\par }\pard \ql \fi-360\li1800\ri0\sa120\sl240\slmult0\nowidctlpar\tx1800\faauto\rin0\lin1800\itap0 {\f376\fs20\insrsid3236647 o\tab }{\f25\fs20\insrsid3236647 ----|>\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 The edge supports the name and the stereotypes as text fields attached to the edge.\par Selecting the text fields of the edge will result in selecting the edge.\par Double clicking on a text fields will not do anything.\par There should be a way to set popups that will be shown if a popup trigger mouse event action occurs. There will be a popup general for the component.\par The line cannot be dragged or split into segments. It is fixed, based on an external algorithm.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 1.2.3\tab SynchronousMessage Edge\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 This class is a concrete Edge. It takes its information from the Link with a Stimulus with a Procedure that has a CallOperationAction (a synchronous action) as the Action class from the UML Model and from the GraphEdge associated with it.\par The structure of the GraphEdge that corresponds to an Extend is given in section 3.2.1.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 1.2.4\tab AsynchronousMessage Edge\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 This class is a concrete Edge. It takes its information from the Link with a Stimulus with a Procedure that has a CallOperationAction (an asynchronous action) as the Action class from the UML Model and from the GraphEdge associated with it.\par The structure of the GraphEdge that corresponds to it is given in section 3.2.1.\par The difference is in the edge ends:\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab sender end: none\par }\pard \ql \fi-360\li1800\ri0\sa120\sl240\slmult0\nowidctlpar\tx1800\faauto\rin0\lin1800\itap0 {\f376\fs20\insrsid3236647 o\tab }{\f25\fs20\insrsid3236647 ----\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab receiver end: an empty arrow, with the color of the edge\par }\pard \ql \fi-360\li1800\ri0\sa120\sl240\slmult0\nowidctlpar\tx1800\faauto\rin0\lin1800\itap0 {\f376\fs20\insrsid3236647 o\tab }{\f25\fs20\insrsid3236647 ---->\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 1.2.5\tab SendSignalMessage Edge\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 This class is a concrete Edge. It takes its information from the Link with a Stimulus with a Procedure that has a SendSignalAction as the Action class from the UML Model and from the GraphEdge associated with it.\par The structure of the GraphEdge that corresponds to it is given in section 3.2.1.\par The difference is in the edge ends:\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab sender end: none\par }\pard \ql \fi-360\li1800\ri0\sa120\sl240\slmult0\nowidctlpar\tx1800\faauto\rin0\lin1800\itap0 {\f376\fs20\insrsid3236647 o\tab }{\f25\fs20\insrsid3236647 ----\par }\pard \ql \fi-360\li1080\ri0\sa120\sl240\slmult0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f25\fs20\insrsid3236647 -\tab receiver end: a half of an empty arrow, with the color of the edge\par }\pard \ql \fi-360\li1800\ri0\sa120\sl240\slmult0\nowidctlpar\tx1800\faauto\rin0\lin1800\itap0 {\f376\fs20\insrsid3236647 o\tab }{\f25\fs20\insrsid3236647 ----\\\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 These actions are similar to the ones above. Only they use a Stimulus with a Procedure that has a SendSignalAction as the Action.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 1.2.6\tab Return Message Edge\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 This class is a concrete Edge. It takes its information from the Link with a Stimulus with a Procedure that has no Action class from the UML Model and from the GraphEdge associated with it.\par The structure of the GraphEdge that corresponds to it is given in section 3.2.1.\par The edge is similar to the AsynchronousMessage edge, but the line is dashed.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\cf6\insrsid3236647 1.2.7\tab Lifeline segments\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\cf6\insrsid3236647 The Object will have lifeline segments drawn. These are the vertical rectangles drawn on Object\rquote s vertical lifeline. The colors of the lifelines (stroke and fill) will default to Object\rquote s colors. There must be an option to set different colors for a segment.\par }\pard \ql \fi-720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid3236647 {\i\f375\fs20\cf6\insrsid3236647 1.2.7.1\tab }{\f25\fs20\cf6\insrsid3236647 The colors of the segments will be set in the Diagram Interchange model using Properties for the Links that start the lifeline segments. The names of these properties will be configurable. The value of the colors }{\f25\fs20\cf6\insrsid3236647 must}{\f25\fs20\cf6\insrsid3236647  have this format: \ldblquote #RRGGBB\rdblquote .\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\cf6\insrsid3236647 The Lifeline segments can be selected with the mouse, just like the Object can be selected. It does not need resize functionality, just a way to visually show that the segment was selected (like a wider stroke line using the same stroke color). An event will be triggered to signal that the segment was selected\par To cover this part of the functionality, the Lifeline segments will not be set or loaded here. There is a layout algorithm required below, which will have the task to arrange the edges and set the Lifeline segments to be drawn.\par }\pard \ql \li0\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid3236647 {\i\f25\fs20\cf6\insrsid3236647\charrsid3236647 1.2.7.2}{\f25\fs20\cf6\insrsid3236647 \tab }{\f25\fs20\cf6\insrsid3236647 The}{\f25\fs20\cf6\insrsid3236647  }{\f25\fs20\cf6\insrsid3236647 width of the lifeline segments will be configurable in the API.\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\cf6\insrsid3236647 Note that the lifeline with the first edge will have a lifeline segments drawn from where the object header down to where the first arrow starts. The properties for this lifeline are saved in the Object itself, not in the Links.\par }\pard \ql \fi-720\li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid3236647 {\i\f25\fs20\cf6\insrsid3236647\charrsid3236647 1.2.7.3}{\f25\fs20\cf6\insrsid3236647 \tab }{\f25\fs20\cf6\insrsid3236647 All Objects will be drawn initially with a dotted line. When the first edge is drawn, the Object\rquote s lifeline will have a Lifeline segment drawn on it.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\cf6\insrsid3236647 1.2.8\tab Edge layout algorithm\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\cf6\insrsid3236647 A pluggable edge layout algorithm must be defined, with a concrete implementation. This layout algorithm will have the task to arrange the edges, by setting their location and by setting the lifeline segments.\par In the default implementation, the edges will be arranged like a chain. There will not be two edges drawn on the same level. The spacing between the edges will be configurable and it will be constant.\par Note that all the arrows start a new lifeline segment in the destination object. And also note that the asynchronous message is the only one that does not break the lifeline segment in the source lifeline. For all the other messages, the lifeline segments end in the position where the arrow starts.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\cf6\insrsid3236647 1.2.9\tab Fixes for Edges\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\cf6\insrsid3236647 1. The Edges will have only one line associated with them, not two. To cover a proper method lifecycle in the sequence diagrams, the user will draw a synchronous call, for instance, and one return arrow.\par 2. The edges must be drawn in such a way that they will not overlap the lifeline segments drawn.\par 3. The edges will react to dragging events by triggering an event. Adding the same functionality to the Lifeline segments will be considered major functionality.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\fs20\insrsid3236647 1.3\tab Required Algorithms\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 None.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\fs20\insrsid3236647 1.4\tab Example of the Software Usage\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 The component will be used in}{\f25\fs20\insrsid3236647  the TopCoder UML Tool to display the sequence diagram related elements on a diagram in the diagram viewer.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\fs20\insrsid3236647 1.5\tab Future Component Direction\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 None.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\insrsid3236647 2.\tab Interface Requirements\par }{\i\f375\fs20\insrsid3236647 2.1.1\tab Graphical User Interface Requirements\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 None.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 2.1.2\tab External Interfaces\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 The design must follow the interface found in the class diagram with the component interfaces. The designer is encouraged to add to the existing interface, but not to remove anything.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 2.1.3\tab Environment Requirements\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Development language: Java 1.5\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Compile target: Java 1.5\par }{\i\f375\fs20\insrsid3236647 2.1.4\tab Package Structure\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 com.topcoder.gui.diagramviewer.uml.sequenceelements\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\insrsid3236647 3.\tab Software Requirements\par }{\b\f374\fs20\insrsid3236647 3.1\tab Administration Requirements\par }{\i\f375\fs20\insrsid3236647 3.1.1\tab What elements of the application need to be configurable?}{\i\f375\fs20\insrsid3236647 \par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid3236647 {\f25\fs20\cf6\insrsid3236647 Lifeline segment width\par Edge spacing\par }{\i\f375\fs20\insrsid3236647 \par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 The structure of the Diagram Interchange elements should be respected. The names of the compartments are provided in this file.\par UML Tool - Sequence Diagram Elements Compartments.rtf\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\fs20\insrsid3236647 3.2\tab Technical Constraints\par }{\i\f375\fs20\insrsid3236647 3.2.1\tab Are there particular frameworks or standards that are required?\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 None\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 3.2.2\tab TopCoder Software Component Dependencies:\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Action Manager 1.0\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 UML Model Manager 1.0\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 UML Project Configuration 1.0\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 UML Model components\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Configuration Manager 2.1.5 - recommended\par }\pard \ql \li720\ri0\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 **Please review the }{\field{\*\fldinst {\f25\fs20\insrsid3236647 HYPERLINK "http://www.topcodersoftware.com/pages/c_showroom.jsp"}{\f25\fs20\insrsid3236647\charrsid3236647 {\*\datafield 00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b6a00000068007400740070003a002f002f007700770077002e0074006f00700063006f0064006500720073006f006600740077006100720065002e0063006f006d002f00700061006700650073002f0063005f00730068006f00770072006f006f006d002e006a00730070000000}}}{\fldrslt {\f25\fs20\ul\cf2\ulc2\insrsid3236647 TopCoder Software component catalog}}}{\f25\fs20\insrsid3236647  for existing components that can be used in the design.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 3.2.3\tab Third Party Component, Library, or Product Dependencies:\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 None\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\i\f375\fs20\insrsid3236647 3.2.4\tab QA Environment:\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Solaris 7\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 RedHat Linux 7.1\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Windows 2000\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Windows 2003\par }{\b\f374\fs20\insrsid3236647 3.3\tab Design Constraints\par }\pard \ql \li720\ri0\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\f25\fs20\insrsid3236647 The component design and development solutions must adhere to the guidelines as outlined in the TopCoder Software Component Guidelines.  Modifications to these guidelines for this component should be detailed below.\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f374\fs20\insrsid3236647 3.4\tab Required Documentation\par }{\i\f375\fs20\insrsid3236647 3.4.1\tab Design Documentation\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Use-Case Diagram\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Class Diagram\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Sequence Diagram\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Component Specification\par }{\i\f375\fs20\insrsid3236647 3.4.2\tab Help / User Documentation\par }{\f3\fs20\insrsid3236647 \u-3913\'b7\tab }{\f25\fs20\insrsid3236647 Design documents must clearly define intended component usage in the \lquote Documentation\rquote  tab of Poseidon.\par }}