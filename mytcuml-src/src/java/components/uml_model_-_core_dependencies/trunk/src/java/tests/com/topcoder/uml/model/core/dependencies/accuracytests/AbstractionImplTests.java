/* * Copyright (C) 2006 TopCoder Inc., All Rights Reserved. */package com.topcoder.uml.model.core.dependencies.accuracytests;
import junit.framework.TestCase;import com.topcoder.uml.model.core.dependencies.Abstraction;import com.topcoder.uml.model.core.dependencies.AbstractionImpl;import com.topcoder.uml.model.core.dependencies.DependencyImpl;import com.topcoder.uml.model.datatypes.expressions.MappingExpression;import com.topcoder.uml.model.datatypes.expressions.MappingExpressionImpl;

/**
 * <p>Unit test for AbstractionImpl.</p> * * @author singlewood * @version 1.0 */
public class AbstractionImplTests extends TestCase {    /**     * Instance of AbstractionImpl for test.     */    private AbstractionImpl abstraction;    /**     * Instance of MappingExpressionImpl for test.     */    private MappingExpression mappingExpression;    /**     * Set up for tests.     *     * @throws Exception throw to JUnit.     */    protected void setUp() throws Exception {        abstraction = new AbstractionImpl();    }    /**     * Test constructor.     *     * @throws Exception throw to JUnit.     */    public void testConstructor() throws Exception {        abstraction = new AbstractionImpl();        assertNotNull(abstraction);    }    /**     * Test if the AbstractionImpl extends DependencyImpl.     *     * @throws Exception throw to JUnit.     */    public void testExtendsDependencyImpl() throws Exception {        assertTrue("AbstractionImpl didn't extends DependencyImpl", abstraction instanceof DependencyImpl);    }    /**     * Test if the AbstractionImpl implement Abstraction.     *     * @throws Exception throw to JUnit.     */    public void testImplUsage() throws Exception {        assertTrue("AbstractionImpl didn't implement Abstraction", abstraction instanceof Abstraction);    }    /**     * Test setMapping method. See if it can set MappingExpression correctly.     * @throws Exception throw to JUnit.     */    public void testSetMapping() throws Exception {        mappingExpression = new MappingExpressionImpl();        abstraction.setMapping(mappingExpression);        assertEquals("setMapping method doesn't work properly.", mappingExpression, abstraction.getMapping());    }    /**     * Test getMapping method. See if it can get MappingExpression correctly.     * @throws Exception throw to JUnit.     */    public void testGetMapping() throws Exception {        mappingExpression = new MappingExpressionImpl();        abstraction.setMapping(mappingExpression);        assertEquals("setMapping method doesn't work properly.", mappingExpression, abstraction.getMapping());    }
}
