{\rtf1\ansi\ansicpg936\uc2\deff1\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Palatino};}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Arial};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New{\*\falt Courier New};}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol{\*\falt Symbol};}{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}\'cb\'ce\'cc\'e5{\*\falt SimSun};}{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f37\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@\'cb\'ce\'cc\'e5;}{\f39\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Palatino};}{\f40\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Palatino};}
{\f42\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Palatino};}{\f43\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Palatino};}{\f44\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Palatino};}
{\f45\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Palatino};}{\f46\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Palatino};}{\f47\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Palatino};}
{\f49\fswiss\fcharset238\fprq2 Arial CE{\*\falt Arial};}{\f50\fswiss\fcharset204\fprq2 Arial Cyr{\*\falt Arial};}{\f52\fswiss\fcharset161\fprq2 Arial Greek{\*\falt Arial};}{\f53\fswiss\fcharset162\fprq2 Arial Tur{\*\falt Arial};}
{\f54\fswiss\fcharset177\fprq2 Arial (Hebrew){\*\falt Arial};}{\f55\fswiss\fcharset178\fprq2 Arial (Arabic){\*\falt Arial};}{\f56\fswiss\fcharset186\fprq2 Arial Baltic{\*\falt Arial};}{\f57\fswiss\fcharset163\fprq2 Arial (Vietnamese){\*\falt Arial};}
{\f59\fmodern\fcharset238\fprq1 Courier New CE{\*\falt Courier New};}{\f60\fmodern\fcharset204\fprq1 Courier New Cyr{\*\falt Courier New};}{\f62\fmodern\fcharset161\fprq1 Courier New Greek{\*\falt Courier New};}
{\f63\fmodern\fcharset162\fprq1 Courier New Tur{\*\falt Courier New};}{\f64\fmodern\fcharset177\fprq1 Courier New (Hebrew){\*\falt Courier New};}{\f65\fmodern\fcharset178\fprq1 Courier New (Arabic){\*\falt Courier New};}
{\f66\fmodern\fcharset186\fprq1 Courier New Baltic{\*\falt Courier New};}{\f67\fmodern\fcharset163\fprq1 Courier New (Vietnamese){\*\falt Courier New};}{\f171\fnil\fcharset0\fprq2 SimSun Western{\*\falt SimSun};}
{\f399\fswiss\fcharset238\fprq2 Verdana CE;}{\f400\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f402\fswiss\fcharset161\fprq2 Verdana Greek;}{\f403\fswiss\fcharset162\fprq2 Verdana Tur;}{\f406\fswiss\fcharset186\fprq2 Verdana Baltic;}
{\f407\fswiss\fcharset163\fprq2 Verdana (Vietnamese);}{\f411\fnil\fcharset0\fprq2 @\'cb\'ce\'cc\'e5 Western;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green51\blue102;}
{\stylesheet{\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \snext0 Normal;}{\s1\ql \li0\ri0\nowidctlpar\faauto\outlinelevel0\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 
\fs24\lang1033\langfe2052\loch\f1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 \sbasedon0 \snext0 heading 2;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af13\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}
{\*\rsidtbl \rsid27829\rsid420122\rsid992810\rsid1004516\rsid1014711\rsid1054823\rsid1068948\rsid1077659\rsid1199380\rsid1210972\rsid1389229\rsid1396062\rsid1782690\rsid1863062\rsid2046512\rsid2299363\rsid2319201\rsid2427773\rsid3025290\rsid3027548
\rsid3041333\rsid3087830\rsid3298013\rsid3567257\rsid4151719\rsid4338889\rsid4354592\rsid4355347\rsid4397572\rsid4410688\rsid4668130\rsid4680516\rsid4744958\rsid4851515\rsid4872187\rsid4941993\rsid5073638\rsid5198007\rsid5528149\rsid6047406\rsid6058673
\rsid6236371\rsid6246975\rsid6564776\rsid6628640\rsid6820205\rsid6907396\rsid6947949\rsid6969255\rsid7015724\rsid7148065\rsid7165600\rsid7341740\rsid7493728\rsid7739679\rsid7820142\rsid7936281\rsid8139779\rsid8263144\rsid8345881\rsid8588653\rsid8601422
\rsid9638525\rsid9777083\rsid9797434\rsid9840977\rsid10124021\rsid10505299\rsid10711081\rsid10832771\rsid10886664\rsid11293270\rsid11944360\rsid12137971\rsid12189790\rsid12205363\rsid12472325\rsid13117161\rsid13179187\rsid13903342\rsid13920027
\rsid13969886\rsid14302564\rsid14763181\rsid15880968\rsid16128033\rsid16212285\rsid16350527\rsid16351163\rsid16532246}{\*\generator Microsoft Word 11.0.5604;}{\info{\author mao}{\operator mao}{\creatim\yr2006\mo11\dy30\hr19\min34}
{\revtim\yr2006\mo12\dy7\hr23\min4}{\version88}{\edmins43}{\nofpages14}{\nofwords3912}{\nofchars22304}{\*\company zju}{\nofcharsws26164}{\vern24689}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0 
\ftnbj\aenddoc\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale80\rsidroot3041333 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang 
{\pntxta \dbch .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta \dbch .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta \dbch )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \dbch (}{\pntxta \dbch )}}\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar
\tx720\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs28\ul\insrsid3041333 \hich\af1\dbch\af13\loch\f1 XMI Writ\hich\af1\dbch\af13\loch\f1 er UML }{\b\fs28\ul\insrsid1389229 
\hich\af1\dbch\af13\loch\f1 Activity Graph}{\b\fs28\ul\insrsid3041333 \hich\af1\dbch\af13\loch\f1  Plugin}{\b\fs28\ul\insrsid16212285 \hich\af1\dbch\af13\loch\f1  }{\b\fs28\ul\insrsid3041333 \hich\af1\dbch\af13\loch\f1 1.0}{\b\fs28\ul\insrsid16212285 
\hich\af1\dbch\af13\loch\f1  Component Specification
\par }\pard\plain \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\insrsid16212285 
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1.\tab 
Design
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 The XMI Writer UML }{
\fs20\cf1\insrsid1068948 \hich\af1\dbch\af13\loch\f1 Activity Graph }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Plugin component provides the ability to write the }{\fs20\cf1\insrsid6236371 \hich\af1\dbch\af13\loch\f1 Activity Graph }{
\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 structure to XMI format. The transformer will be invoked by the XMI Writer with the root }{\fs20\cf1\insrsid6969255 \hich\af1\dbch\af13\loch\f1 Activity Graph }{\fs20\cf1\insrsid16212285 
\hich\af1\dbch\af13\loch\f1 element. It will write the response to the output print stream.}{\fs20\cf1\insrsid14302564 \hich\af1\dbch\af13\loch\f1  For the general purpose, }{\fs20\cf1\insrsid16351163 \hich\af1\dbch\af13\loch\f1 
this component is designed to accept any TC UML model elements \hich\af1\dbch\af13\loch\f1 as long as it is properly configured.}{\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 The general idea is using reflection. First, there are too many kinds of model elements in the }{\fs20\cf1\insrsid4872187 \hich\af1\dbch\af13\loch\f1 Activity G}{\fs20\cf1\insrsid16212285 
\hich\af1\dbch\af13\loch\f1 raph. This compels us to seek a generic way to do transformation. Second, the TC UML model is well defined, and i\hich\af1\dbch\af13\loch\f1 
t is well fitted into the OMG model. We can easily deduct the XMI element name from package name, and easily deduct attribute and child element name methods name.
\par \hich\af1\dbch\af13\loch\f1 Transforming process can be divided two parts. The first part is used to retrieve OMG XMI ele\hich\af1\dbch\af13\loch\f1 
ment description for specific TC model element. The second part is transform TC model element with the help of corresponding OMG XMI element description. Bridge between these two parts is XMIElementDescription, which contains XMI element name, a list of A
\hich\af1\dbch\af13\loch\f1 t\hich\af1\dbch\af13\loch\f1 tributeDescriptions, and a list of ChildDescriptions. AttributeDescription }{\fs20\cf1\insrsid1014711 \hich\af1\dbch\af13\loch\f1 maps}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
 an XMI attribute name to a java.lang.Method, which can be used to retrieve the attribute value. ChildDescription }{\fs20\cf1\insrsid4744958 \hich\af1\dbch\af13\loch\f1 maps}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
 an XMI child element name to a java.lang.Method, which can\hich\af1\dbch\af13\loch\f1  be used to retrieve the child value. 
\par \hich\af1\dbch\af13\loch\f1 Description retrieving part is pluggable. Because we can retrieve description in}{\fs20\cf1\insrsid13117161 \hich\af1\dbch\af13\loch\f1  various ways}{\fs20\cf1\insrsid9840977 \hich\af1\dbch\af13\loch\f1 , which can be }{
\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 loading from configuration directly, or }{\fs20\cf1\insrsid3025290 \hich\af1\dbch\af13\loch\f1 hard coding}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  the des}{\fs20\cf1\insrsid7341740 
\hich\af1\dbch\af13\loch\f1 cription, or even parsing DTD. }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 In current i\hich\af1\dbch\af13\loch\f1 
mplementation, we use reflection to retrieve XMI element description. Element name can be deducted from interface name. Attributes' and child elements' names can be deducted from "getXXX()" and "isXXX()" method. Because the OMG DTD is so loose, we treat E
\hich\af1\dbch\af13\loch\f1 n\hich\af1\dbch\af13\loch\f1 
um, Boolean values as attributes, and String, model element and Collection values as child elements. Some "getXXX()" methods must be excluded with help from configuration. And some child elements are logically contained, while some are only referenced. We
\hich\af1\dbch\af13\loch\f1  \hich\af1\dbch\af13\loch\f1 use a little configuration to distinguish them.
\par \hich\af1\dbch\af13\loch\f1 Element transforming part is }{\fs20\cf1\insrsid4338889 \hich\af1\dbch\af13\loch\f1 hard coded}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
 in the transformer, because DTD is fixed. We should always transform element to same format. If one wants to use different transform }{\fs20\cf1\insrsid4338889 \hich\af1\dbch\af13\loch\f1 mechanism}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
. He/she should define ano\hich\af1\dbch\af13\loch\f1 ther plugin. With the help of }{\fs20\cf1\insrsid4338889 \hich\af1\dbch\af13\loch\f1 XMI}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  description, it is somewhat easy to transform }{
\fs20\cf1\insrsid12137971 \hich\af1\dbch\af13\loch\f1 Activity Graph }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 element to XMI. The general idea is transforming Enum, Boolean and String directly, and transforming model element recursively.

\par \hich\af1\dbch\af13\loch\f1 Above two parts are described ver\hich\af1\dbch\af13\loch\f1 y detailed in Section 1.3.
\par \hich\af1\dbch\af13\loch\f1 Thread safety is not an issue for this component. Please see 1.6 for explanation.
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1.1
\tab Design Patterns 
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Strategy Pattern: }{
\fs20\cf1\insrsid7936281 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 XMIDescription in }{\fs20\cf1\insrsid12137971 \hich\af1\dbch\af13\loch\f1 ActivityGraph}{\fs20\cf1\insrsid16128033 \hich\af1\dbch\af13\loch\f1 2XM}{\fs20\cf1\insrsid16128033 
\hich\af1\dbch\af13\loch\f1 I}{\fs20\cf1\insrsid13969886 \hich\af1\dbch\af13\loch\f1 Transformer is used as a}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  }{\fs20\cf1\insrsid13969886 \hich\af1\dbch\af13\loch\f1 strategy}{
\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 . It is configurable and pluggable.
\par \hich\af1\dbch\af13\loch\f1 Thi\hich\af1\dbch\af13\loch\f1 s components itself is also a strategy for XMI Writer component. It acts as a plugin for writer.}{\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1.2
\tab Industry Standards 
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 UML 1.5
\par \hich\af1\dbch\af13\loch\f1 XMI 1.2}{\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1.3
\tab Required Algorithms
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
NOTE, in the following algorithm explanation, every step has an example, which is only a }{\fs20\cf1\insrsid992810 \hich\af1\dbch\af13\loch\f1 fragme\hich\af1\dbch\af13\loch\f1 nt}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
 from XMI file. I don't wan to paste the completed XMI file here. Developers should look through some XMI files several times before going on. Be familiar with XMI first!}{\fs20\cf1\insrsid16212285 
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid13920027 {\fs20\cf1\insrsid7015724 
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\faauto\rin0\lin1080\itap0\pararsid4680516 {\i\f36\fs20\cf1\insrsid4680516 \hich\af36\dbch\af13\loch\f36 1.3.1 }{\i\f36\fs20\cf1\insrsid16212285\charrsid4680516 \hich\af36\dbch\af13\loch\f36 
Build XMIElementDescription via reflection}{\i\f36\fs20\cf1\insrsid2299363\charrsid4680516 
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Because TC UML }{\fs20\cf1\insrsid7493728 \hich\af1\dbch\af13\loch\f1 Activity Graph }{\fs20\cf1\insrsid16212285 
\hich\af1\dbch\af13\loch\f1 Model is well defined, it fits OMG DTD very well. We can use reflection to get XMI element name for model classes, and also retrieve attributes and nested element names.
\par \hich\af1\dbch\af13\loch\f1 The basic idea is as follows. Every getXXX() or isXXX() method can be expected to retu\hich\af1\dbch\af13\loch\f1 
rn an attribute or child node of XMI element defined by given TC UML element. We can deduct the attribute name or child name from the method name. Note, another key point here is we use methods but not field names, because field names may be changed un-ex
\hich\af1\dbch\af13\loch\f1 p\hich\af1\dbch\af13\loch\f1 ectedly.
\par \hich\af1\dbch\af13\loch\f1 The first question is how to distinguish attribute and child node? Fortunately, OMG DTD is very loose. Every attribute can be written as a child element, and also most of child elements can be written as attributes. The }{
\fs20\cf1\insrsid4355347 \hich\af1\dbch\af13\loch\f1 simplest}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  way is to write ev\hich\af1\dbch\af13\loch\f1 
ery attribute as child. But this way would make the resulting XMI look weird. We just pick simple values like Enum and Boolean to be written as attribute.
\par \hich\af1\dbch\af13\loch\f1 The second question comes from logical contained child and referenced child. To solve this problem, w\hich\af1\dbch\af13\loch\f1 
e use some pre-defined configurations. A list of contained node names is provided for each element via configuration. All the other nodes are referenced by default.
\par \hich\af1\dbch\af13\loch\f1 Unfortunately, TC UML Model is too powerful. It holds references between classes, which are\hich\af1\dbch\af13\loch\f1 
 not defined in OMG DTD. The third problem is we must exclude some getXXX() methods. Again, we use pre-defined configurations to solve this problem. A list of excluded methods is provided for each element via configuration.
\par \hich\af1\dbch\af13\loch\f1 The last problem belongs to meth\hich\af1\dbch\af13\loch\f1 
od names. Methods which return a collection is named with plural. We use a tricky method to deal with it. Every getXXAs() method has a corresponding addXXB() method. E.g. For getStimulus() method, there is a corresponding method named as addStimuli(). Fro
\hich\af1\dbch\af13\loch\f1 m\hich\af1\dbch\af13\loch\f1  "getStimulus", we can get "addStimu". And then try to find method name beginning with this word, which is "addStimuli". At last step, we just remove "add" from head. That's our expected result.

\par 
\par }{\b\fs20\cf1\insrsid420122 \hich\af1\dbch\af13\loch\f1 Var}{\b\fs20\cf1\insrsid420122 \hich\af1\dbch\af13\loch\f1 ia}{\b\fs20\cf1\insrsid16212285\charrsid3087830 \hich\af1\dbch\af13\loch\f1 bles used in this algorithm:
\par \hich\af1\dbch\af13\loch\f1 type}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  (INPUT) : Class --  T\hich\af1\dbch\af13\loch\f1 C UML model element type, for which we find nodes, and attributes.
\par }{\b\fs20\cf1\insrsid16212285\charrsid3087830 \hich\af1\dbch\af13\loch\f1 excludedMethods}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
 : Map<String, Set<String>> -- A predifined field which maps a interface name to a set of excluded methods in the interface.
\par }{\b\fs20\cf1\insrsid16212285\charrsid3087830 \hich\af1\dbch\af13\loch\f1 containedElements}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  : Map<String, Set<String>> -- A\hich\af1\dbch\af13\loch\f1 
 predifined field which maps a interface name to a set of element names which is logically contained.
\par }{\b\fs20\cf1\insrsid16212285\charrsid3087830 \hich\af1\dbch\af13\loch\f1 xmiElements}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  : Map<Class, XMIElement> -- A cache which holds the already retrieved XMIElement.
\par \hich\af1\dbch\af13\loch\f1 KNOWN_PACKAGE: String -- A constant value like "com.topcoder\hich\af1\dbch\af13\loch\f1 .uml". We only support type from this package and its sub-packages.
\par 
\par \hich\af1\dbch\af13\loch\f1 Following is the algorithm's work flow.
\par \hich\af1\dbch\af13\loch\f1 1) Try to retrieve implemented interface of type if type is not a interface.
\par }{\f2\fs18\cf17\insrsid16212285\charrsid4941993 \hich\af2\dbch\af13\loch\f2     if (type is not an interface) \{
\par \hich\af2\dbch\af13\loch\f2       foreach (interface in type.g\hich\af2\dbch\af13\loch\f2 etInterfaces()) \{
\par \hich\af2\dbch\af13\loch\f2         if (interface.getPackge().getName().startsWith(KNOWN_PACKAGE)) \{
\par \hich\af2\dbch\af13\loch\f2           type = interface; break; \} \}
\par \hich\af2\dbch\af13\loch\f2     \}
\par \hich\af2\dbch\af13\loch\f2     if (type.getPackage().getName().startsWith(KNOWN_PACKAGE) == false
\par \hich\af2\dbch\af13\loch\f2       return null;
\par \hich\af2\dbch\af13\loch\f2     \}
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1     
\par \hich\af1\dbch\af13\loch\f1 2) If given type is\hich\af1\dbch\af13\loch\f1  cached in xmiElements, directly return the value is cache.
\par 
\par \hich\af1\dbch\af13\loch\f1 3) Element name should be "UML:" + type.getSimpleName(), "UML:Classifier".
\par \hich\af1\dbch\af13\loch\f1    And create XMIElementDescription with the name and type.
\par \hich\af1\dbch\af13\loch\f1    
\par \hich\af1\dbch\af13\loch\f1 4) Iterate through every methods to get attributes and nested children.
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2     foreach method in type.getMethods() \{
\par }{\f2\fs18\cf10\insrsid16212285\charrsid14763181 \hich\af2\dbch\af13\loch\f2       // ignore methods with parameter
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2       if (method parameters array length is not zero) \{
\par \hich\af2\dbch\af13\loch\f2         continue;
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2         
\par }{\f2\fs18\cf10\insrsid16212285\charrsid14763181 \hich\af2\dbch\af13\loch\f2       // ign\hich\af2\dbch\af13\loch\f2 ore excluded methods
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2       if (method name is in excludedMethods) \{
\par \hich\af2\dbch\af13\loch\f2         continue;
\par \hich\af2\dbch\af13\loch\f2       \}
\par }{\f2\fs18\cf10\insrsid16212285\charrsid14763181 \hich\af2\dbch\af13\loch\f2       
\par \hich\af2\dbch\af13\loch\f2       // treat "isXXX" as an attribute
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2       if (method name starts with "is", like "isLeaf") \{
\par \hich\af2\dbch\af13\loch\f2         Create AttributeDescription(method, method.getName(\hich\af2\dbch\af13\loch\f2 ))
\par \hich\af2\dbch\af13\loch\f2         Add the attribute to the created XMIElement is step 3.
\par \hich\af2\dbch\af13\loch\f2         continue;
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2         
\par }{\f2\fs18\cf10\insrsid16212285\charrsid14763181 \hich\af2\dbch\af13\loch\f2       // ignore methods not start with "get"
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2       if (method name doesn't start with "get") \{
\par \hich\af2\dbch\af13\loch\f2         continue;
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       
\par \hich\af2\dbch\af13\loch\f2       Class returnType := method.getReturnType();
\par \hich\af2\dbch\af13\loch\f2       
\par }{\f2\fs18\cf10\insrsid16212285\charrsid14763181 \hich\af2\dbch\af13\loch\f2       // treat enum value as an attribute
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2       if (returnType is kind of Enum, like "getVisibility") \{
\par \hich\af2\dbch\af13\loch\f2         Remove "get" prefix, and make 1st letter lowercase, like "visibility"
\par \hich\af2\dbch\af13\loch\f2         Add the A\hich\af2\dbch\af13\loch\f2 ttributeDescription(name retrieved in above step, method)
\par \hich\af2\dbch\af13\loch\f2         continue;
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       
\par }{\f2\fs18\cf10\insrsid16212285\charrsid14763181 \hich\af2\dbch\af13\loch\f2       // treat string, collection and other types as child element
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2       if (returnType is kind of String, like "getNamespace") \{
\par \hich\af2\dbch\af13\loch\f2         Remove "get" prefix, and ma\hich\af2\dbch\af13\loch\f2 ke 1st letter lowercase, like "namesapce"
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (returnType is kind of Collection, like "getStimulus") \{
\par \hich\af2\dbch\af13\loch\f2         Find method starts with "addStimu", like "addSimuli"
\par \hich\af2\dbch\af13\loch\f2         If return type of "addXXX" is not in KNOWN_PACKAGE, continue;
\par \hich\af2\dbch\af13\loch\f2     \hich\af2\dbch\af13\loch\f2     Remove "add" prefix, and make 1st letter lowercase, like "stimuli"
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (returnType is in KNOWN_PACKAGE, like "getMultiplicity") \{
\par \hich\af2\dbch\af13\loch\f2         Remove "get" prefix, and make 1st letter lowercase, like "multiplicity"
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else
\par \hich\af2\dbch\af13\loch\f2      \hich\af2\dbch\af13\loch\f2    continue;
\par \hich\af2\dbch\af13\loch\f2        
\par }{\f2\fs18\cf10\insrsid16212285\charrsid14763181 \hich\af2\dbch\af13\loch\f2       // add string, collection and other types as child element
\par }{\f2\fs18\cf17\insrsid16212285\charrsid11293270 \hich\af2\dbch\af13\loch\f2       Get the declaring class of method, like owner := method.getDeclaringClass
\par \hich\af2\dbch\af13\loch\f2       Get child name as "UML:" + owner.getSimpleName + [.name],
\par \hich\af2\dbch\af13\loch\f2         like "UML:ModelEle\hich\af2\dbch\af13\loch\f2 ment.namespace"
\par \hich\af2\dbch\af13\loch\f2       If (returnType is not a String) \{
\par \hich\af2\dbch\af13\loch\f2         Get the reference flag, like containedElement.get("ModelElement").get("Namespace")
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       Add ChildDescription(child name, method, reference flag) to XMIElement.
\par \hich\af2\dbch\af13\loch\f2     \}
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1     
\par \hich\af1\dbch\af13\loch\f1 5) Put the type/XMIElement in xmiElements cache, and return the element.
\par 
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\faauto\rin0\lin1080\itap0\pararsid1077659 {\i\f36\fs20\cf1\insrsid1077659\charrsid1077659 \hich\af36\dbch\af13\loch\f36 1.3.2 }{\i\f36\fs20\cf1\insrsid16212285\charrsid1077659 \hich\af36\dbch\af13\loch\f36 
Transform Model Element to XMI
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
Because of the XMIElementDescription element built in above section, it is somewhat easier to transform model element to XMI. The general idea of\hich\af1\dbch\af13\loch\f1 
 this algorithm is transforming Enum, Boolean and String directly, and transforming model element recursively.
\par \hich\af1\dbch\af13\loch\f1 The last thing to note before we go to the algorithm work flow is that we should deal with all kinds of values for both attributes and child elem\hich\af1\dbch\af13\loch\f1 
ents, although in the above section attributes only contain Enum and Boolean, and child elements only contain String and model element. This is because the XMIDescription is pluggable, we can't expect what kind of value is for the attributes or children.

\par 
\par \hich\af1\dbch\af13\loch\f1 Variables and common routines (All defined in transformer class):
\par }{\b\fs20\cf1\insrsid16212285\charrsid10886664 \hich\af1\dbch\af13\loch\f1 xmiDescription}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  : XMIDescription -- An XMIDescription used to retrieve XMIElementDescription
\par }{\b\fs20\cf1\insrsid16212285\charrsid10886664 \hich\af1\dbch\af13\loch\f1 retrieveId}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 (Object) : String -- Retrieve id for the element
\par }{\b\fs20\cf1\insrsid16212285\charrsid10886664 \hich\af1\dbch\af13\loch\f1 buildIDREFS}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 (Collection) : String -- Bui\hich\af1\dbch\af13\loch\f1 ld IDREFS. 
\par \hich\af1\dbch\af13\loch\f1                         (See http://www.w3.org/TR/REC-xml/#idref)
\par }{\b\fs20\cf1\insrsid16212285\charrsid10886664 \hich\af1\dbch\af13\loch\f1 normalizeString}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 (String) : String -- Replace escape characters in String. 
\par \hich\af1\dbch\af13\loch\f1                         (See http://www.w3.org/TR/REC-xml/#dt-escape)
\par }{\b\fs20\cf1\insrsid16212285\charrsid10886664 \hich\af1\dbch\af13\loch\f1 normalizeEnum}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 (Enum) : String -- Ma\hich\af1\dbch\af13\loch\f1 ke the first character lowercase. (Required by DTD)
\par 
\par \hich\af1\dbch\af13\loch\f1 Following is the algorithm work flow.
\par }{\fs20\cf1\insrsid1199380 \hich\af1\dbch\af13\loch\f1 Input: }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1) }{\b\fs20\cf1\insrsid16212285\charrsid13903342 \hich\af1\dbch\af13\loch\f1 element}{\fs20\cf1\insrsid16212285 
\hich\af1\dbch\af13\loch\f1  -- the model element
\par }{\fs20\cf1\insrsid1199380 \hich\af1\dbch\af13\loch\f1       }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 2) }{\b\fs20\cf1\insrsid16212285\charrsid13903342 \hich\af1\dbch\af13\loch\f1 isReference}{\fs20\cf1\insrsid16212285 
\hich\af1\dbch\af13\loch\f1  -- a flag indicating whether a reference should be written.
\par \hich\af1\dbch\af13\loch\f1      }{\fs20\cf1\insrsid1199380 \hich\af1\dbch\af13\loch\f1  }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 3) }{\b\fs20\cf1\insrsid16212285\charrsid13903342 \hich\af1\dbch\af13\loch\f1 writtenElements}{
\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  -- the set of elemen\hich\af1\dbch\af13\loch\f1 ts which have been logically written.(Not a reference)
\par \hich\af1\dbch\af13\loch\f1 To implement tran}{\fs20\cf1\insrsid1782690 \hich\af1\dbch\af13\loch\f1 s}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 form() method in transformer, just pass }{\i\fs20\cf13\insrsid16212285\charrsid13903342 
\hich\af1\dbch\af13\loch\f1 [element, true, new HashSet()]}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1  to this algorithm.
\par 
\par 
\par \hich\af1\dbch\af13\loch\f1 1) Retri}{\fs20\cf1\insrsid16350527 \hich\af1\dbch\af13\loch\f1 e}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 ve element description from xmiDescription:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid7148065 {\f2\fs18\cf17\insrsid16212285\charrsid7148065 \hich\af2\dbch\af13\loch\f2     elementDesc = xmiDescription.getXMIElementDescription(element)
\par \hich\af2\dbch\af13\loch\f2     if (elementDesc == null) \{
\par \hich\af2\dbch\af13\loch\f2       According to ignoreUnknownElement flag,
\par \hich\af2\dbch\af13\loch\f2       throw UnknownElementTypeException or return directly
\par \hich\af2\dbch\af13\loch\f2     \}
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 2) Determine w}{\fs20\cf1\insrsid8588653 \hich\af1\dbch\af13\loch\f1 h}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 ether the element is logically w\hich\af1\dbch\af13\loch\f1 
ritten twice. This can also avoid cyclic dependency.
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid6058673 {\f2\fs18\cf17\insrsid16212285\charrsid6058673 \hich\af2\dbch\af13\loch\f2   If (isReference == false ) \{
\par \hich\af2\dbch\af13\loch\f2     if (writtenElements.co}{\f2\fs18\cf17\insrsid27829 \hich\af2\dbch\af13\loch\f2 ntains(element) throw Duplicate}{\f2\fs18\cf17\insrsid16212285\charrsid6058673 \hich\af2\dbch\af13\loch\f2 ElementException
\par \hich\af2\dbch\af13\loch\f2     else writtenElements.add(element);
\par \hich\af2\dbch\af13\loch\f2   \}
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 3) If the isReference flag is true, simply write:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9638525 {\f2\fs18\cf17\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2    \hich\af2\dbch\af13\loch\f2 
 <elementDesc.getElementName() xmi.idref='retrieveId()'/>
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1    Like:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9638525 {\f2\fs18\cf17\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2     <UML:Classifier xmi.idref='a435baasds45435' />
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1    And directly return.
\par 
\par \hich\af1\dbch\af13\loch\f1 4) Start the element as:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9638525 {\f2\fs18\cf17\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2     "<" + elementDesc.getElementName(). Like "<UML:Classifier"
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 5) Write XMI id as an attribute:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9638525 {\f2\fs18\cf17\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2     xmi.id='retrieveId(element)'
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 6) Write attributes:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid9638525 {\f2\fs18\cf17\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2     foreach (attribute : elementDesc.getAttributes()) \{
\par }{\f2\fs18\cf10\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2     
\par \hich\af2\dbch\af13\loch\f2       // retri}{\f2\fs18\cf10\insrsid4410688 \hich\af2\dbch\af13\loch\f2 e}{\f2\fs18\cf10\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2 ve the attribute value in model element
\par }{\f2\fs18\cf17\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2       Object value = attribute.getValue(element);
\par \hich\af2\dbch\af13\loch\f2    \hich\af2\dbch\af13\loch\f2    if (value == null) \{
\par \hich\af2\dbch\af13\loch\f2         continue;
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       
\par }{\f2\fs18\cf10\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2       // covert the value to string
\par }{\f2\fs18\cf17\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2       if (value instanceof String) \{
\par \hich\af2\dbch\af13\loch\f2         attrStr = normalizeString(value);
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (value instanceof Enum) \{
\par \hich\af2\dbch\af13\loch\f2         attrStr = normalizeEnum(valu\hich\af2\dbch\af13\loch\f2 e);
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (value instanceof Boolean) \{
\par \hich\af2\dbch\af13\loch\f2         attrStr = value.toString();
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (value instanceof Collection) \{
\par \hich\af2\dbch\af13\loch\f2         attrStr = buildIDREFS(value);
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else \{
\par \hich\af2\dbch\af13\loch\f2         attrStr = retrieveId(value);
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       
\par }{\f2\fs18\cf10\insrsid16212285\charrsid9638525 \hich\af2\dbch\af13\loch\f2       // output the attribute with attribute.getName() and attrStr
\par \hich\af2\dbch\af13\loch\f2       // like isLeaf='true'
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 7) Close the start tag with ">"
\par 
\par \hich\af1\dbch\af13\loch\f1 8) Write child elements:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid10832771 {\f2\fs18\cf17\insrsid16212285\charrsid10832771 \hich\af2\dbch\af13\loch\f2     foreach (child : elementDesc.getChildren()) \{
\par }{\f2\fs18\cf10\insrsid16212285\charrsid10832771 \hich\af2\dbch\af13\loch\f2     
\par \hich\af2\dbch\af13\loch\f2       // retri}{\f2\fs18\cf10\insrsid9777083 \hich\af2\dbch\af13\loch\f2 e}{\f2\fs18\cf10\insrsid16212285\charrsid10832771 \hich\af2\dbch\af13\loch\f2 ve the child value in model eleme\hich\af2\dbch\af13\loch\f2 nt
\par }{\f2\fs18\cf17\insrsid16212285\charrsid10832771 \hich\af2\dbch\af13\loch\f2       Object value = child.getValue(element);
\par \hich\af2\dbch\af13\loch\f2       if (value == null) \{
\par \hich\af2\dbch\af13\loch\f2         continue;
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       
\par }{\f2\fs18\cf10\insrsid16212285\charrsid10832771 \hich\af2\dbch\af13\loch\f2       // write the element, childName below is from child.getName()
\par }{\f2\fs18\cf17\insrsid16212285\charrsid10832771 \hich\af2\dbch\af13\loch\f2       if (value instanceof String) \{
\par \hich\af2\dbch\af13\loch\f2         <childName>normalizeString(value)<\hich\af2\dbch\af13\loch\f2 /childName>
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (value instanceof Enum) \{
\par \hich\af2\dbch\af13\loch\f2         <childName xmi.value='normalizeEnum(value)' />
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (value instanceof Boolean) \{
\par \hich\af2\dbch\af13\loch\f2         <childName xmi.value='value.toString()' />
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else if (value instanceof Collection) \{
\par \hich\af2\dbch\af13\loch\f2         <childName>
\par \hich\af2\dbch\af13\loch\f2           foreach (childElement in value) \{
\par \hich\af2\dbch\af13\loch\f2             Recursively call this algorithm with childElement.
\par \hich\af2\dbch\af13\loch\f2             NOTE, child.isReference() flag should be passed.
\par \hich\af2\dbch\af13\loch\f2           \}
\par \hich\af2\dbch\af13\loch\f2         </\hich\af2\dbch\af13\loch\f2 childName>
\par \hich\af2\dbch\af13\loch\f2       \}
\par \hich\af2\dbch\af13\loch\f2       else \{
\par \hich\af2\dbch\af13\loch\f2         <childName>
\par \hich\af2\dbch\af13\loch\f2           Recursively call this algorithm with value.
\par \hich\af2\dbch\af13\loch\f2           NOTE, child.isReference() flag should be passed.
\par \hich\af2\dbch\af13\loch\f2         </childName>
\par \hich\af2\dbch\af13\loch\f2       \}
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 9) End the element as:
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid10832771 {\f2\fs18\cf17\insrsid16212285\charrsid10832771 \hich\af2\dbch\af13\loch\f2     </elementDesc.getElementName()>, l\hich\af2\dbch\af13\loch\f2 
ike </UML:Classifier>
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1.4
\tab Component Class Overview}{\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\f0\insrsid16212285 \tab }{\b\f0\insrsid12137971 \hich\af0\dbch\af13\loch\f0 ActivityGraph}{
\b\f0\insrsid4397572 \hich\af0\dbch\af13\loch\f0 2}{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 XMITransformer}{\fs20\insrsid16212285 
\par }\pard \ql \fi720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 It is the core class of this component. It can be used to transform Model element to its XMI representation.
\par \hich\af0\dbch\af13\loch\f0 This class holds an XMIDescription instance, from whi\hich\af0\dbch\af13\loch\f0 ch it can retrieve XMIElementDescription for specific model element. Because of the XMIElementDescription, the }{\f0\insrsid10711081 
\hich\af0\dbch\af13\loch\f0 transforming}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0  process is rather straightforward. We just get the }{\f0\insrsid10711081 \hich\af0\dbch\af13\loch\f0 XMI}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 
 element name, all the attributes and child elements from the description, and\hich\af0\dbch\af13\loch\f0 
 print it one by one. All the simple values are printed directly, like Boolean, Enum, String. For single model element value, and model element value contained in Collection, we directly print the id reference if it is contained as an attribute. And if it
\hich\af0\dbch\af13\loch\f0  \hich\af0\dbch\af13\loch\f0 is contained as a child element, we just call the transform method recursively.
\par \hich\af0\dbch\af13\loch\f0 Besides that, }{\f0\insrsid2046512 \loch\af0\dbch\af13\hich\f0 \'93}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 ignoreUnknownElementType}{\f0\insrsid2046512 \loch\af0\dbch\af13\hich\f0 \'94}{\f0\insrsid16212285 
\hich\af0\dbch\af13\loch\f0  flag is defined in this class. It is used to indicate whether unknown element type should be ignored. If it is true, unknown element ty\hich\af0\dbch\af13\loch\f0 pe will be ignored, otherwise, exception would occur.
\par \hich\af0\dbch\af13\loch\f0 This class is mutable, thus not thread safe.
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 XMIElementDescription}{\fs20\insrsid16212285 
\par }\pard \ql \fi720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 This class describes an XMI element. It contains two simple attributes, the element type in TC UML Model, and the element name in OMG
\hich\af0\dbch\af13\loch\f0  DTD. It also contains a list of AttributeDescriptions, which contains information for the attributes this element, and a list of ChildDescriptions, which contains information for the child elements of this element.
\par \hich\af0\dbch\af13\loch\f0 Typically, the XMIElementDescription ins\hich\af0\dbch\af13\loch\f0 tances will be created by XMIDescription implementations, and be used by }{\f0\insrsid9797434 \hich\af0\dbch\af13\loch\f0 ActivityGraph}{\f0\insrsid4397572 
\hich\af0\dbch\af13\loch\f0 2}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 XMITransformer to help transform the UML Model to XMI. 
\par \hich\af0\dbch\af13\loch\f0 This class is mutable, thus not thread-safe. }{\fs20\insrsid16212285 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 
\par \tab \hich\af0\dbch\af13\loch\f0 NodeDescription <<abstract>>}{\fs20\insrsid16212285 
\par }\pard \ql \fi720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 This abstract class describes an XMI\hich\af0\dbch\af13\loch\f0 
 node. As convention, node can be attribute or element. It contains two attributes, a String }{\f0\insrsid6246975 \hich\af0\dbch\af13\loch\f0 representing}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 
 node name, and a java.lang.reflect.Method representing the method whose returned value will be used as node value. Besides that, it also defines a }{\f0\insrsid6246975 \loch\af0\dbch\af13\hich\f0 \'93}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 ge
\hich\af0\dbch\af13\loch\f0 tValue}{\f0\insrsid6246975 \loch\af0\dbch\af13\hich\f0 \'94}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0  method which uses reflection to retrieve node value.
\par \hich\af0\dbch\af13\loch\f0 This class is immutable, thus thread-safe.}{\fs20\insrsid16212285 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 ChildDescription}{\fs20\insrsid16212285 
\par }\pard \ql \fi720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 This class describes an XMI nested child element. It extends from NodeDescription class, and add}{\f0\insrsid1863062 
\hich\af0\dbch\af13\loch\f0 s}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0  a reference flag. So it contains two attributes, name and methods as which in NodeDescription. And the additional }{\f0\insrsid3027548 \hich\af0\dbch\af13\loch\f0 reference}{
\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0  flag is used to indicate whether this child should be stored as a reference or not. 
\par \hich\af0\dbch\af13\loch\f0 This class is immutable, thus thread-safe.}{\fs20\insrsid16212285 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 A\hich\af0\dbch\af13\loch\f0 ttributeDescription}{\fs20\insrsid16212285 
\par }\pard \ql \fi720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 
This class describes an XMI attribute. It extends from NodeDescription class without any additional methods. So it contains two attributes, name and methods as which in NodeDescription.
\par \hich\af0\dbch\af13\loch\f0 This class is immutable, thus thread-safe.}{\fs20\insrsid16212285 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 XMIDe\hich\af0\dbch\af13\loch\f0 scription <<interface>>}{\fs20\insrsid16212285 
\par }\pard \ql \fi720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 This interface defines a contract to }{\f0\insrsid1210972 \hich\af0\dbch\af13\loch\f0 retrieve}{\f0\insrsid16212285 
\hich\af0\dbch\af13\loch\f0  XMIElementDescription for some element type in TC UML Model. The implementation can load all the descriptions from configuration file, try to parse OMG DTD, or even hardcode the descript\hich\af0\dbch\af13\loch\f0 
ions. Currently, an implementation which uses reflection with a few configurations is provided.
\par \hich\af0\dbch\af13\loch\f0 Implementation of interface is not required thread-safe.}{\fs20\insrsid16212285 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 ReflectedXMIDescription [xmidescription sub-package]}{\fs20\insrsid16212285 
\par }\pard \ql \fi720\li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 An implementation of XMIDescription interface. I\hich\af0\dbch\af13\loch\f0 
t uses reflection to retrieve XMI descriptions for given TC UML element type. This implementation assumes TC UML Model is well fitted into OMG DTD.
\par \hich\af0\dbch\af13\loch\f0 It uses the "getXXX" methods to determine the element attributes and children name. The methods which return\hich\af0\dbch\af13\loch\f0 
 Boolean or Enum will be mapped to an attribute. The methods which return String, Collection or other objects will be mapped to a child element. Please see CS for details.
\par \hich\af0\dbch\af13\loch\f0 
Because some additional methods are defined in TC UML Model, which are not defined in OMG DTD, we would exclude such methods via configuration. And some children are stored by references, the configuration is also used to indicate whether some child is lo
\hich\af0\dbch\af13\loch\f0 g\hich\af0\dbch\af13\loch\f0 ically contained or not. Please see CS and sample configuration file for details.
\par \hich\af0\dbch\af13\loch\f0 The XMIElementDescription is retrieved lazily, and also cached. 
\par \hich\af0\dbch\af13\loch\f0 This class}{\f0\insrsid8139779 \hich\af0\dbch\af13\loch\f0  is}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0  not thread-safe, since it is mutable. }{\fs20\insrsid16212285 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1.5
\tab Component Exception Definitions}{\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\f0\insrsid16212285 \tab }{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 DescriptionRetriev}{
\b\f0\insrsid5198007 \hich\af0\dbch\af13\loch\f0 al}{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 Exception [extends XMITransformException]}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 :}{\fs20\insrsid16212285 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid16212285 \tab }{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 This exception is used to indicate any error while }{\fs20\insrsid11944360 \hich\af1\dbch\af13\loch\f1 retrieving}
{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1  }{\fs20\insrsid11944360 \hich\af1\dbch\af13\loch\f1 XMI}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1  description. 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 This exception can be thrown from XMIDescription.getXMIElementDescription(Class) method. All implementation of the interface may th
\hich\af1\dbch\af13\loch\f1 row this exception. 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 NodeValueRetriev}{\b\f0\insrsid12472325 \hich\af0\dbch\af13\loch\f0 al}{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 
Exception [extends XMITransformException]}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 :}{\fs20\insrsid16212285 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid16212285 \tab }{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 This exception is used to indicate any error while }{\fs20\insrsid1396062 \hich\af1\dbch\af13\loch\f1 retrieving}{
\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1  node value. 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 This exception can be thrown from NodeDescription.getValue(Object) method. It will be used to wrap\hich\af1\dbch\af13\loch\f1 
 method invoking exception. 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 UnknownElementTypeException [extends XMITransformException]}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 :}{\fs20\insrsid16212285 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 This exception is used to indicate some model element type is unknown by the tran}{\fs20\insrsid1396062 \hich\af1\dbch\af13\loch\f1 s}{
\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 former. 
\par \hich\af1\dbch\af13\loch\f1 This exception can be thrown from }{\fs20\insrsid4397572 \hich\af1\dbch\af13\loch\f1 ActivityGraph2}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 XMITransformer.transform (\hich\af1\dbch\af13\loch\f1 
Object, java.io.PrintStream) method as kind of XMITran}{\fs20\insrsid6628640 \hich\af1\dbch\af13\loch\f1 s}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 formException.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid8601422 \tab \hich\af0\dbch\af13\loch\f0 Duplicate}{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 ElementException [extends XMITransformException]}{\f0\insrsid16212285 
\hich\af0\dbch\af13\loch\f0 :}{\fs20\insrsid16212285 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 This exception is used to indicate some model element is logically contained more than once. 
\par \hich\af1\dbch\af13\loch\f1 This exception can be thrown from }{\fs20\insrsid4397572 \hich\af1\dbch\af13\loch\f1 ActivityGraph2}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
XMITransformer.transform (Object, java.io.PrintStream) method as kind of XMITran}{\fs20\insrsid5073638 \hich\af1\dbch\af13\loch\f1 s}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 formException. 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 ConfigurationException [extends BaseException]}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 :}{\fs20\insrsid16212285 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 This exception is used to indicate any error in configuration. \hich\af1\dbch\af13\loch\f1 
The error can be internal error in ConfigurationManager component, or invalid configuration value. 
\par \hich\af1\dbch\af13\loch\f1 This exception can be thrown from ReflectedXMIDescription's constructor and }{\fs20\insrsid4397572 \hich\af1\dbch\af13\loch\f1 ActivityGraph2}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 XMITransformer's constructor.

\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f0\insrsid16212285 \tab \hich\af0\dbch\af13\loch\f0 XMITransformException [form XMI Wri\hich\af0\dbch\af13\loch\f0 ter component]}{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 :
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
This exception is used to indicate any error in transforming process. Actually, all the above exceptions except ConfigurationException extend this exception.
\par \hich\af1\dbch\af13\loch\f1 This exception can be thrown from }{\fs20\insrsid4397572 \hich\af1\dbch\af13\loch\f1 ActivityGraph2}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 XMITransformer.transform (Object, \hich\af1\dbch\af13\loch\f1 
java.io.PrintStream).
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1.6
\tab Thread Safety
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
This component is not thread-safe. Each thread is expected to create its own }{\fs20\cf1\insrsid4397572 \hich\af1\dbch\af13\loch\f1 ActivityGraph2}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 XMITransformer object. As the }{
\fs20\cf1\insrsid4397572 \hich\af1\dbch\af13\loch\f1 ActivityGraph2}{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 XMITransformer object is quite lightweight, so create multiple such objects won\hich\f1 \rquote \loch\f1 t
\hich\af1\dbch\af13\loch\f1  cause any performance issues.}{\fs20\cf1\insrsid3567257 \hich\af1\dbch\af13\loch\f1  Another reason is transforming is usually a time-consuming process. Synchronization is not very acceptable.}{\fs20\cf1\insrsid16212285 
\hich\af1\dbch\af13\loch\f1  And there is no such requirement too, because writing process is u}{\fs20\cf1\insrsid7820142 \hich\af1\dbch\af13\loch\f1 sually done in a single thread.}{\fs20\cf1\insrsid16212285 
\par }{\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
Only NodeDescription, AttributeDescription, and ChildDescription are immutalbe. They are simple classes acting like value holding entities. All the other classes are mutable in this component, thus they are not thread-safe.
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\insrsid16212285 \hich\af1\dbch\af13\loch\f1 2.\tab 
Environment Requirements\tab \tab 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 2.
\hich\af1\dbch\af13\loch\f1 1\tab Environment}{\fs20\insrsid16212285 
\par }\pard\plain \ql \fi-360\li1080\ri0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\f3\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\f0\insrsid16212285 
\hich\af0\dbch\af13\loch\f0 Development language: Java1.5
\par }{\f3\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 Compile target: Java1.5}{\fs20\insrsid16212285 
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 2.2
\tab TopCoder Software Components
\par }\pard\plain \ql \fi-360\li1080\ri0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{
\b\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 Config Manager 2.1.5
\par }\pard \ql \li1080\ri0\nowidctlpar\faauto\rin0\lin1080\itap0 {\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 It is used in ReflectedXMIDescription's constructor to exclude some methods and to determine which\hich\af36\dbch\af13\loch\f36 
 children are logically contained. And it is also used in }{\f36\fs20\insrsid4397572 \hich\af36\dbch\af13\loch\f36 ActivityGraph2}{\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 
XMITransformer's constructor to load configuration to create XMIDescription instance.
\par 
\par }\pard \ql \fi-360\li1080\ri0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\b\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 XMI Writer 1.0
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f36\fs20\insrsid16212285 \tab \hich\af36\dbch\af13\loch\f36 This design is a plugin to XMI Writer component, and }{\f36\fs20\insrsid4397572 \hich\af36\dbch\af13\loch\f36 
ActivityGraph2}{\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 XMITransform\hich\af36\dbch\af13\loch\f36 er extends from AbstractXMITransformer in the component.
\par }\pard \ql \fi-360\li1080\ri0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\b\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 Base Exception 1.0
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f36\fs20\insrsid16212285 \tab \hich\af36\dbch\af13\loch\f36 BaseException in this component is extended by ConfigurationException.
\par }\pard \ql \fi-360\li1080\ri0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\b\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 Object Factory 2.0.1
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f36\fs20\insrsid16212285 \tab \hich\af36\dbch\af13\loch\f36 It is used to create XMIDescription instance in }{\f36\fs20\insrsid4397572 \hich\af36\dbch\af13\loch\f36 
ActivityGraph2}{\f36\fs20\insrsid16212285 \hich\af36\dbch\af13\loch\f36 XMITransformer's con\hich\af36\dbch\af13\loch\f36 structor.
\par }\pard \ql \fi-360\li1080\ri0\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0\pararsid4151719 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 
UML Model - Activity Graphs}{\b\f36\fs20\insrsid2427773 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Common Behavior}{\b\f36\fs20\insrsid2427773 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Actions}{\b\f36\fs20\insrsid2427773 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Core Depen}{\b\f36\fs20\insrsid2427773 \hich\af36\dbch\af13\loch\f36 d}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\hich\af36\dbch\af13\loch\f36 encies}{\b\f36\fs20\insrsid2427773 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - State Machines}{\b\f36\fs20\insrsid2427773 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Core Extension Mechanisms}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 

\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Collaborations}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Core \hich\af36\dbch\af13\loch\f36 Auxiliary Elements}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{
\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Data Types}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Core Classifiers}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Core}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Core Relationships}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid4151719\charrsid4151719 
\par }{\b\f36\fs20\insrsid4151719 \tab }{\b\f36\fs20\insrsid4151719\charrsid4151719 \hich\af36\dbch\af13\loch\f36 UML Model - Use Cases}{\b\f36\fs20\insrsid6947949 \hich\af36\dbch\af13\loch\f36  1.0}{\b\f36\fs20\insrsid16212285\charrsid4151719 
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f36\fs20\insrsid16212285 \tab \hich\af36\dbch\af13\loch\f36 
A series of UML Model components can be used by this component. And usually, all of them are used, because the model graph includes almost all the components.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\i\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 NOTE: The default location for TopCoder Software component jars\hich\af0\dbch\af13\loch\f0 
 is../lib/tcs/COMPONENT_NAME/COMPONENT_VERSION relative to the component installation.}{\i\f0\cf1\insrsid16212285 \hich\af0\dbch\af13\loch\f0   Setting the tcs_libdir property in topcoder_global.properties will overwrite this default location.}{
\fs20\insrsid16212285 
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\insrsid16212285 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 2.3
\tab Third Party Components}{\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \ql \fi-360\li1080\ri0\sa120\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{
\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 None
\par }{\i\f0\fs20\insrsid16212285 
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\insrsid16212285 \hich\af1\dbch\af13\loch\f1 3.\tab 
\hich\af1\dbch\af13\loch\f1 Installation and Configuration
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 3.1
\tab Package Name
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
com.topcoder.uml.xmi.writer.transformers.model
\par \hich\af1\dbch\af13\loch\f1 com.topcoder.uml.xmi.writer.transformers.model.xmidescription}{\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 3.2
\tab Configuration Parameters
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\i\f36\fs20\cf1\insrsid6047406\charrsid6047406 \hich\af36\dbch\af13\loch\f36 3.2. 1 }
{\i\f36\fs20\cf1\insrsid16212285\charrsid6047406 \hich\af36\dbch\af13\loch\f36 Configuration for }{\i\f36\fs20\cf1\insrsid4397572 \hich\af36\dbch\af13\loch\f36 ActivityGraph2}{\i\f36\fs20\cf1\insrsid16212285\charrsid6047406 \hich\af36\dbch\af13\loch\f36 
XMITransformer
\par }\trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 
\clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil \cellx2835\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil 
\cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\b\f0\insrsid16212285 
\hich\af0\dbch\af13\loch\f0 Parameter}{\b\fs20\insrsid16212285 \cell }{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 Descri\hich\af0\dbch\af13\loch\f0 ption}{\b\fs20\insrsid16212285 \cell }{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 Values}{
\b\fs20\insrsid16212285 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\b\fs20\insrsid16212285 \trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 
\trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil \cellx2835\clvertalt\clbrdrt
\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil \cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\row }\pard \ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 ignoreUnknownElementType\cell \hich\af1\dbch\af13\loch\f1 
Represents the flag indicating whether unknown element type should be ignored. It is Required.\cell \hich\af1\dbch\af13\loch\f1 Boolean value\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid16212285 
\trowd \irow1\irowband1\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 
\clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil \cellx2835\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil 
\cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\row }\pard \ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {
\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 objectFactory\cell \hich\af1\dbch\af13\loch\f1 Represents a ConfigManager namespace used to initialized ObjectFactory instance. It is REQUIRED.\cell \hich\af1\dbch\af13\loch\f1 com.topcoder. objectfactory
\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid16212285 \trowd \irow2\irowband2\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 
\trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil \cellx2835\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil \cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\row }\pard \ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 xmiDescription\cell \hich\af1\dbch\af13\loch\f1 
Represents the XMIDescription object name in ObjectFactory. It is REQUIRED.\cell \hich\af1\dbch\af13\loch\f1 xmiDescriptionObject\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid16212285 
\trowd \irow3\irowband3\lastrow \ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl
\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil \cellx2835\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil \cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\row }\pard 
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid16212285 
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\faauto\rin0\lin1080\itap0\pararsid6047406 {\fs20\insrsid6047406 
\par }{\i\f36\fs20\cf1\insrsid6047406\charrsid6047406 \hich\af36\dbch\af13\loch\f36 3.2.2 }{\i\f36\fs20\cf1\insrsid16212285\charrsid6047406 \hich\af36\dbch\af13\loch\f36 Configura\hich\af36\dbch\af13\loch\f36 tion for ReflectedXMIDescription
\par }\pard \ql \li0\ri0\nowidctlpar\intbl\faauto\rin0\lin0 {\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 Parameter}{\b\fs20\insrsid16212285 \cell }{\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 Description}{\b\fs20\insrsid16212285 \cell }{
\b\f0\insrsid16212285 \hich\af0\dbch\af13\loch\f0 Values}{\b\fs20\insrsid16212285 \cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\b\fs20\insrsid16212285 \trowd \irow0\irowband0\ts11\trgaph108\trleft-108\trbrdrt
\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 
\cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil \cellx2835\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil \cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 
\clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\row }\pard \ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
[ModelElementName]. excludedMethods\cell \hich\af1\dbch\af13\loch\f1 Represents a list of excluded methods for the specific model element. It is OPTIONAL.\cell \hich\af1\dbch\af13\loch\f1 getElementImports,
\par \hich\af1\dbch\af13\loch\f1 getReferenceTags\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid16212285 \trowd \irow1\irowband1\ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 
\trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil 
\cellx2835\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil \cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 
\clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\row }\pard \ql \li0\ri0\sa120\nowidctlpar\intbl\faauto\rin0\lin0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 [ModelElementName]. contianedNodes\cell 
\hich\af1\dbch\af13\loch\f1 Represents a list of logically contained node for the specific model element. It is OPTIONAL.\cell \hich\af1\dbch\af13\loch\f1 templateParameter,
\par \hich\af1\dbch\af13\loch\f1 taggedValue\cell }\pard \ql \li0\ri0\widctlpar\intbl\aspalpha\aspnum\faauto\adjustright\rin0\lin0 {\fs20\insrsid16212285 \trowd \irow2\irowband2\lastrow \ts11\trgaph108\trleft-108\trbrdrt\brdrs\brdrw10 \trbrdrl\brdrs\brdrw10 
\trbrdrb\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trftsWidth1\trpaddl108\trpaddr108\trpaddfl3\trpaddfr3 \clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2943\clshdrawnil 
\cellx2835\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 \clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2937\clshdrawnil \cellx5772\clvertalt\clbrdrt\brdrs\brdrw10 \clbrdrl\brdrs\brdrw10 \clbrdrb\brdrs\brdrw10 
\clbrdrr\brdrs\brdrw10 \cltxlrtb\clftsWidth3\clwWidth2148\clshdrawnil \cellx7920\row }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid16212285 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Comments on configuration of ReflectedXMIDescription:
\par }\pard \ql \fi-360\li360\ri0\sa120\nowidctlpar\tx360\faauto\rin0\lin360\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 1)\tab \hich\f1 All \'93\loch\f1 \hich\f1 getXXX()\'94\hich\af1\dbch\af13\loch\f1 
 methods can be divided into three categories: excluded methods, contained node methods, and referenced node methods. If we configure two categories of them, the other category comes out automatically. Actually, the most straightforward way to configure t
\hich\af1\dbch\af13\loch\f1 h\hich\af1\dbch\af13\loch\f1 \hich\f1 is class is defining \'93\loch\f1 \hich\f1 referencedNodes\'94\loch\f1 \hich\f1  and \'93\loch\f1 \hich\f1 containedNodes\'94\loch\f1 \hich\f1 
. But after comparing XSD and TC UML Model, we can find that most of the methods define referenced nodes. We want to minimize the configuration task, so we configure \'93\loch\f1 \hich\f1 excludeMethods\'94\loch\f1 \hich\f1  and \'93\loch\f1 containe
\hich\af1\dbch\af13\loch\f1 d\hich\af1\dbch\af13\loch\f1 \hich\f1 Nodes\'94\loch\f1 , which need much less configuration.
\par }\pard \ql \fi-360\li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 2)\tab \hich\f1 In this section, we will give a sample to find excluded methods. For example, there is a method called \'93\loch\f1 
\hich\f1 getElementImports()\'94\loch\f1 \hich\f1  in ModelElement class, and there is no attribute or child element defined as \'93\loch\f1 elemen\hich\af1\dbch\af13\loch\f1 \hich\f1 tImport\'94\loch\f1 \hich\f1  for ModelElement in DTD. As a result, 
\'93\loch\f1 \hich\f1 getElementImports\'94\loch\f1  should be excluded. As a reminder, most of the classes don\hich\f1 \rquote \loch\f1 t have excluded methods.
\par }\pard \ql \fi-360\li360\ri0\sa120\nowidctlpar\tx360\faauto\rin0\lin360\itap0 {\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 3)\tab In this section, we will give a way to find contained nodes. If some name is defined in some element\hich\f1 \rquote 
\loch\f1 s\hich\af1\dbch\af13\loch\f1  child elements list, but it is not defined in the attributes list, it should be a contained node. Let\hich\f1 \rquote \loch\f1 \hich\f1 s take ModelElement as an example again. \'93\loch\f1 \hich\f1 taggedValue\'94
\loch\f1  is defined in the child elements list, but it is not defined in attributes list of ModelElement i\hich\af1\dbch\af13\loch\f1 n\hich\af1\dbch\af13\loch\f1 \hich\f1  DTD. So it should be a contained node. \'93\loch\f1 \hich\f1 Stereotype\'94
\loch\f1 \hich\f1  is defined in both child list and attribute list, so it should only be a referenced node. You can also note that type of \'93\loch\f1 \hich\f1 stereotype\'94\loch\f1  attribute is IDREFS.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid16212285 
\par }{\i\fs20\cf10\insrsid16212285\charrsid7165600 \hich\af1\dbch\af13\loch\f1 Please see sample.xml in docs directory for sam\hich\af1\dbch\af13\loch\f1 ple configuration.
\par }{\fs20\insrsid16212285 
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 3.3
\tab Dependencies Configuration
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 NONE}{
\i\fs20\cf2\insrsid16212285 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\insrsid16212285 \hich\af1\dbch\af13\loch\f1 4.\tab 
Usage Notes
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 4.1
\tab Required steps to test the component
\par }\pard\plain \ql \fi-360\li1080\ri0\sa120\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{
\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Extract the component distribution.
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\faauto\rin0\lin1080\itap0 {\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Follow }{\field{\*\fldinst {\fs20\insrsid16212285 
\hich\af1\dbch\af13\loch\f1 HYPERLINK "C:\\\\filez\\\\work\\\\tc\\\\tcs_corp\\\\templates\\\\component\\\\" \\\\\\\\\\\\\\\\l "_Dependencies_Confi\hich\af1\dbch\af13\loch\f1 guration" }{\fs20\insrsid3298013\charrsid3041333 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000001000000e0c9ea79f9bace118c8200aa004ba90b5e0000002e002e002f00660069006c0065007a002f0077006f0072006b002f00740063002f007400630073005f0063006f00720070002f00740065006d0070006c0061007400650073002f0063006f006d0070006f00
6e0065006e0074002f0000000000}}}{\fldrslt {\fs20\ul\cf2\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Dependencies Configuration}}}{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 .
\par }{\f3\fs20\insrsid16212285 \loch\af3\dbch\af13\hich\f3 \'b7\tab }{\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 Execute \hich\f1 \lquote \loch\f1 ant test\hich\f1 \rquote \loch\f1  within the directory that the distribution was extracted to.
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 4.2
\tab Required steps to use the component
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
Follow 3.2 to configure this component.
\par }\pard\plain \s2\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx0\faauto\outlinelevel1\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\fs20\insrsid16212285 \hich\af1\dbch\af13\loch\f1 4.3
\tab Demo
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid12189790 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\i\f36\fs20\cf1\insrsid12205363\charrsid12189790 
\hich\af36\dbch\af13\loch\f36 4.3.1 }{\i\f36\fs20\cf1\insrsid16212285\charrsid12189790 \hich\af36\dbch\af13\loch\f36 Create the transformer instance.
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16212285 {\f2\fs18\cf17\insrsid13179187 \hich\af2\dbch\af13\loch\f2 // use conf}{\f2\fs18\cf17\insrsid13179187 \hich\af2\dbch\af13\loch\f2 ig}{
\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 uration to in}{\f2\fs18\cf17\insrsid4354592 \hich\af2\dbch\af13\loch\f2 i}{\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 tialize 
\par \hich\af2\dbch\af13\loch\f2 XMITransformer transformer = new }{\f2\fs18\cf17\insrsid4397572 \hich\af2\dbch\af13\loch\f2 ActivityGraph2}{\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 
XMITransformer(<<namespace in ConfigManager>>);
\par \hich\af2\dbch\af13\loch\f2 // use XMIDescription instance to initialize
\par \hich\af2\dbch\af13\loch\f2 XMITransformer transformer = new }{\f2\fs18\cf17\insrsid4397572 \hich\af2\dbch\af13\loch\f2 ActivityGraph2}{\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 XMITransformer(<<XMIDescription in
\hich\af2\dbch\af13\loch\f2 stance>>, true);
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }\pard \ql \fi-360\li1080\ri0\sa120\nowidctlpar\faauto\rin0\lin1080\itap0\pararsid12189790 {\i\f36\fs20\cf1\insrsid12205363\charrsid12189790 \hich\af36\dbch\af13\loch\f36 4.3.2 }{\i\f36\fs20\cf1\insrsid16212285\charrsid12189790 
\hich\af36\dbch\af13\loch\f36 Use the API directly
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16212285 {\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 // transform an UML model element
\par \hich\af2\dbch\af13\loch\f2 transformer.transform(<<element>>, System.out);
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid12189790 {\i\f36\fs20\cf1\insrsid12205363\charrsid12189790 \hich\af36\dbch\af13\loch\f36 4.3.3 }{\i\f36\fs20\cf1\insrsid16212285\charrsid12189790 
\hich\af36\dbch\af13\loch\f36 Use this component as a plugin of XMI Writer component.
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16212285 {\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 Map<TransformerType,XMITransformer> transformers = new Map<Transfo
\hich\af2\dbch\af13\loch\f2 rmerType,XMITransformer>();
\par \hich\af2\dbch\af13\loch\f2 transformers.put(TransformerType.Model, transformer);
\par \hich\af2\dbch\af13\loch\f2 // ... add other transformers ...
\par 
\par \hich\af2\dbch\af13\loch\f2 XMIWriter writer = new XMIWriter(<<manager>>, transformers);
\par 
\par \hich\af2\dbch\af13\loch\f2 // plugin would be called automatically
\par \hich\af2\dbch\af13\loch\f2 writer.transform(<<outputStream>>, tr\hich\af2\dbch\af13\loch\f2 ue);
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\fs20\cf1\insrsid16212285 
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid12189790 {\i\f36\fs20\cf1\insrsid12205363\charrsid12189790 \hich\af36\dbch\af13\loch\f36 4.3.4 }{\i\f36\fs20\cf1\insrsid16212285\charrsid12189790 
\hich\af36\dbch\af13\loch\f36 Change the Ignore-Unknown-Element-Type Option
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0\pararsid16212285 {\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 transformer.setIgnoreUnknownElementType(true);
\par \hich\af2\dbch\af13\loch\f2 // u}{\f2\fs18\cf17\insrsid4668130 \hich\af2\dbch\af13\loch\f2 n}{\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 known element type will be silently ignored.
\par 
\par \hich\af2\dbch\af13\loch\f2 transformer.setIgnoreUnknownElementType(true);
\par \hich\af2\dbch\af13\loch\f2 // u}{\f2\fs18\cf17\insrsid2319201 \hich\af2\dbch\af13\loch\f2 nk}{\f2\fs18\cf17\insrsid16212285\charrsid16212285 \hich\af2\dbch\af13\loch\f2 nown element type will introduce some error.}{
\i\f2\fs18\cf17\insrsid16212285\charrsid16212285 
\par }\pard \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 {\i\fs20\cf2\insrsid16212285 
\par }\pard\plain \s1\ql \li0\ri0\sb120\sa60\sl240\slmult0\keepn\nowidctlpar\tx360\faauto\outlinelevel0\rin0\lin0\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\b\insrsid16212285 \hich\af1\dbch\af13\loch\f1 5.\tab 
\hich\af1\dbch\af13\loch\f1 Future Enhancements
\par }\pard\plain \ql \li720\ri0\sa120\sl240\slmult0\nowidctlpar\faauto\rin0\lin720\itap0 \fs24\lang1033\langfe2052\loch\af1\hich\af1\dbch\af13\cgrid\langnp1033\langfenp2052 {\fs20\cf1\insrsid16212285 \hich\af1\dbch\af13\loch\f1 
Add more implementations of XMIDescription interface to transform other kinds of elements..
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid16212285 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f0\insrsid16212285 
\par }}